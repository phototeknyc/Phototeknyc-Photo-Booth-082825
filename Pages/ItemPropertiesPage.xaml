<Page x:Class="Photobooth.Pages.ItemPropertiesPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Photobooth.Pages"
      mc:Ignorable="d" 
       d:DesignHeight="450" d:DesignWidth="350" Background="{StaticResource SurfaceSecondaryBrush}"
      Title="Properties">

    <Page.Resources>
        <!-- Modern Button Style with larger rows -->
        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="20,16"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Height" Value="56"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource SurfaceButtonHoverBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern Expander Style -->
        <Style x:Key="ModernExpander" TargetType="Expander">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0,2"/>
        </Style>
        
        <!-- Modern TextBox Style -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource SurfacePanelBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#606060"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="36"/>
        </Style>
        
        <!-- Modern ComboBox Style -->
        <Style x:Key="ModernComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource SurfacePanelBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#606060"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="36"/>
        </Style>
        
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Collapse Button on the left -->
        <Button x:Name="CollapseButton" Grid.Row="0" HorizontalAlignment="Left" 
                Width="32" Height="32" Margin="8" 
                Background="Transparent" BorderThickness="0" 
                Click="CollapseButton_Click" Cursor="Hand"
                ToolTip="Collapse Properties Panel">
            <Path Width="12" Height="12" Fill="#CCCCCC" Stretch="Uniform">
                <Path.Data>
                    <PathGeometry>
                        <PathFigure StartPoint="0,0">
                            <LineSegment Point="8,6"/>
                            <LineSegment Point="0,12"/>
                        </PathFigure>
                    </PathGeometry>
                </Path.Data>
            </Path>
        </Button>
        
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <StackPanel>
            
            <!-- Selected Section -->
            <Border BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="0,0,0,1">
                <Expander Header="Selected" Style="{StaticResource ModernExpander}" IsExpanded="True">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="15" Foreground="#CCCCCC" Margin="0,12,0,8"/>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                <StackPanel Margin="0,4,0,8">
                    <StackPanel Orientation="Vertical">
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" >

                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Left" Cursor="Hand">
                                    <Image x:Name="image" Source="{Binding SelectedItemsPositionChangeSource}" Width="20" Stretch="UniformToFill" Margin="5,2,5,2" VerticalAlignment="Center" 
                                           MouseLeftButtonDown="ToggleLockPosition_Click"/>
                                    <TextBlock Text="Position" FontSize="8" Foreground="{StaticResource SurfaceTextSecondaryBrush}" HorizontalAlignment="Center" Margin="0,0,0,2"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock Text="X:" FontSize="14" Foreground="White" Margin="1,5,5,5" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Margin="1,5,5,5">
                                        <TextBox x:Name="tbRatioX" Width="75" Height="28" VerticalAlignment="Center" Background="{StaticResource SurfaceInputBrush}" 
                                                 Foreground="White" BorderBrush="{x:Null}" HorizontalAlignment="Center"
                                                 Text="{Binding SelectedElementsPositionX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                    <TextBlock Text="Y:" FontSize="14" Foreground="White" Margin="1,5,5,5" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Margin="1,5,5,5">
                                        <TextBox x:Name="tbRatioY" Width="75" Height="28" VerticalAlignment="Center" Background="{StaticResource SurfaceInputBrush}" 
                                                 Foreground="White" BorderBrush="{x:Null}" HorizontalAlignment="Center"
                                                 Text="{Binding SelectedElementsPositionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </StackPanel>
                            </StackPanel>
                            
                            <!-- Size Display (Actual Pixels) -->
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,4,0,0" >
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Left" Cursor="Hand">
                                    <Image x:Name="image8" Source="{Binding SelectedItemsSizeChangeSource}" Width="20" Stretch="UniformToFill" Margin="5,2,5,2" VerticalAlignment="Center"
                                           MouseLeftButtonDown="ToggleLockSize_Click"/>
                                    <TextBlock Text="Size" FontSize="8" Foreground="{StaticResource SurfaceTextSecondaryBrush}" HorizontalAlignment="Center" Margin="0,0,0,2"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock Text="W:" FontSize="14" Foreground="White" Margin="0,5,5,5" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Margin="0,5,5,5">
                                        <TextBox x:Name="tbSizeX" Width="75" Height="28" VerticalAlignment="Center" Background="{StaticResource SurfaceInputBrush}" 
                                                 Foreground="White" BorderBrush="{x:Null}" HorizontalAlignment="Center"
                                                 Text="{Binding SelectedElementsActualPixelWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <TextBlock Text="H:" FontSize="14" Foreground="White" Margin="0,5,5,5" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Margin="0,5,5,5">
                                        <TextBox x:Name="tbSizeY" Width="75" Height="28" VerticalAlignment="Center" Background="{StaticResource SurfaceInputBrush}" 
                                                 Foreground="White" BorderBrush="{x:Null}"
                                                 Text="{Binding SelectedElementsActualPixelHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Border>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                </StackPanel>
                </Expander>
            </Border>
            
            <!-- Alignments Section -->
            <Border BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="0,0,0,1">
                <Expander Header="Alignments" Style="{StaticResource ModernExpander}" IsExpanded="True">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="15" Foreground="#CCCCCC" Margin="0,12,0,8"/>
                        </DataTemplate>
                    </Expander.HeaderTemplate>
                <StackPanel Margin="0,4,0,8">
                    <StackPanel>
                            <!-- Photoshop-style alignment layout -->
                            <Grid Width="240" HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="35"/>
                                    <RowDefinition Height="35"/>
                                    <RowDefinition Height="35"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="40"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Alignment buttons with modern SVG icons -->
                                <!-- Align Left -->
                                <Button ToolTip="Align Left Edges" Grid.Row="0" Grid.Column="0" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding AlignLeftCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="0,2,2,14"/>
                                                <RectangleGeometry Rect="4,3,8,4"/>
                                                <RectangleGeometry Rect="4,10,6,4"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                
                                <!-- Align Center Horizontal -->
                                <Button ToolTip="Align Horizontal Centers" Grid.Row="0" Grid.Column="1" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding AlignHCenterCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="7,0,2,16"/>
                                                <RectangleGeometry Rect="2,3,12,4"/>
                                                <RectangleGeometry Rect="4,10,8,4"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                
                                <!-- Align Right -->
                                <Button ToolTip="Align Right Edges" Grid.Row="0" Grid.Column="2" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding AlignRightCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="14,2,2,14"/>
                                                <RectangleGeometry Rect="4,3,8,4"/>
                                                <RectangleGeometry Rect="6,10,6,4"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                
                                <!-- Align Top -->
                                <Button ToolTip="Align Top Edges" Grid.Row="1" Grid.Column="0" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding AlignTopCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="2,0,14,2"/>
                                                <RectangleGeometry Rect="3,4,4,8"/>
                                                <RectangleGeometry Rect="10,4,4,6"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                
                                <!-- Align Center Vertical -->
                                <Button ToolTip="Align Vertical Centers" Grid.Row="1" Grid.Column="1" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding AlignVCenterCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="0,7,16,2"/>
                                                <RectangleGeometry Rect="3,2,4,12"/>
                                                <RectangleGeometry Rect="10,4,4,8"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                
                                <!-- Align Bottom -->
                                <Button ToolTip="Align Bottom Edges" Grid.Row="1" Grid.Column="2" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding AlignBottomCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="2,14,14,2"/>
                                                <RectangleGeometry Rect="3,4,4,8"/>
                                                <RectangleGeometry Rect="10,6,4,6"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                
                                <!-- Distribution buttons -->
                                <!-- Distribute Horizontal -->
                                <Button ToolTip="Distribute Horizontal Spacing" Grid.Row="0" Grid.Column="4" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding DistributeHorizontalCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="0,2,2,12"/>
                                                <RectangleGeometry Rect="5,4,2,8"/>
                                                <RectangleGeometry Rect="9,4,2,8"/>
                                                <RectangleGeometry Rect="14,2,2,12"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                
                                <!-- Distribute Vertical -->
                                <Button ToolTip="Distribute Vertical Spacing" Grid.Row="0" Grid.Column="5" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding DistributeVerticalCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="2,0,12,2"/>
                                                <RectangleGeometry Rect="4,5,8,2"/>
                                                <RectangleGeometry Rect="4,9,8,2"/>
                                                <RectangleGeometry Rect="2,14,12,2"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                
                                <!-- Center in Canvas -->
                                <Button ToolTip="Center in Canvas" Grid.Row="1" Grid.Column="4" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding CenterInCanvasCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <PathGeometry>
                                                    <PathFigure StartPoint="0,0">
                                                        <LineSegment Point="16,0"/>
                                                        <LineSegment Point="16,16"/>
                                                        <LineSegment Point="0,16"/>
                                                        <LineSegment Point="0,0"/>
                                                    </PathFigure>
                                                </PathGeometry>
                                                <RectangleGeometry Rect="5,5,6,6"/>
                                                <LineGeometry StartPoint="8,0" EndPoint="8,5"/>
                                                <LineGeometry StartPoint="8,11" EndPoint="8,16"/>
                                                <LineGeometry StartPoint="0,8" EndPoint="5,8"/>
                                                <LineGeometry StartPoint="11,8" EndPoint="16,8"/>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                                
                                <!-- Match Size -->
                                <Button ToolTip="Match Size" Grid.Row="1" Grid.Column="5" Width="35" Height="30" 
                                        Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Cursor="Hand"
                                        Command="{Binding MatchSizeCmd}">
                                    <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <RectangleGeometry Rect="1,1,6,6"/>
                                                <RectangleGeometry Rect="9,9,6,6"/>
                                                <PathGeometry>
                                                    <PathGeometry.Figures>
                                                        <PathFigure StartPoint="7,4">
                                                            <LineSegment Point="9,4"/>
                                                            <LineSegment Point="9,2"/>
                                                            <LineSegment Point="12,5"/>
                                                            <LineSegment Point="9,8"/>
                                                            <LineSegment Point="9,6"/>
                                                            <LineSegment Point="7,6"/>
                                                        </PathFigure>
                                                    </PathGeometry.Figures>
                                                </PathGeometry>
                                            </GeometryGroup>
                                        </Path.Data>
                                    </Path>
                                </Button>
                            </Grid>
                            <!-- Multi-selection hint -->
                            <StackPanel Orientation="Vertical" Margin="10,5,10,5">
                                <TextBlock Text="Selection Tips:" FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" FontWeight="Bold" Margin="0,5,0,2"/>
                                <TextBlock FontSize="9" Foreground="{StaticResource SurfaceTextTertiaryBrush}" TextWrapping="Wrap">
                                    <Run Text="• Click to select single item"/><LineBreak/>
                                    <Run Text="• Ctrl+Click to add/remove items"/><LineBreak/>
                                    <Run Text="• Shift+Click to select range"/><LineBreak/>
                                    <Run Text="• Select multiple items to align them"/>
                                </TextBlock>
                                <TextBlock Text="{Binding SelectedItemsCount, StringFormat='Selected: {0} item(s)'}" 
                                           FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Margin="0,5,0,0" FontWeight="Bold"/>
                            </StackPanel>
                        </StackPanel>
                </StackPanel>
                </Expander>
            </Border>
            
            <!-- Rotation Section -->
            <Border BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="0,0,0,1">
                <Expander Header="Rotation" Style="{StaticResource ModernExpander}" IsExpanded="True">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="15" Foreground="#CCCCCC" Margin="0,12,0,8"/>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="0,4,0,8">
                    <Grid Margin="10,5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <!-- Current Rotation Display -->
                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="15,0,15,10">
                            <TextBlock Text="Angle:" FontSize="12" Foreground="White" VerticalAlignment="Center" Width="60"/>
                            <TextBox x:Name="RotationTextBox" 
                                     Text="{Binding SelectedElementsRotation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                     Width="80" Height="28" FontSize="12" 
                                     Background="{StaticResource SurfaceInputBrush}" Foreground="{StaticResource SurfaceTextPrimaryBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}"
                                     HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <TextBlock Text="°" FontSize="12" Foreground="{StaticResource SurfaceTextSecondaryBrush}" VerticalAlignment="Center" Margin="8,0,0,0"/>
                        </StackPanel>
                        
                        <!-- Rotation Slider -->
                        <StackPanel Grid.Row="1" Orientation="Vertical" Margin="0,0,0,10">
                            <Slider x:Name="RotationSlider" 
                                    Value="{Binding SelectedElementsRotation, Mode=TwoWay}" 
                                    Minimum="-180" Maximum="180" 
                                    TickFrequency="15" TickPlacement="BottomRight"
                                    Width="240" Height="25"/>
                            <TextBlock Text="-180°           0°           180°" 
                                       FontSize="9" Foreground="{StaticResource SurfaceTextTertiaryBrush}" 
                                       HorizontalAlignment="Center" Margin="0,2,0,0"/>
                        </StackPanel>
                        
                        <!-- Quick Rotation Buttons -->
                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,0">
                            <Button Content="↺ 90°" Width="52" Height="28" Margin="3" 
                                    Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" 
                                    Foreground="White" FontSize="11" Cursor="Hand"
                                    Command="{Binding RotateLeft90Cmd}"
                                    ToolTip="Rotate 90° Counter-clockwise"/>
                            <Button Content="Reset" Width="52" Height="28" Margin="3" 
                                    Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" 
                                    Foreground="White" FontSize="11" Cursor="Hand"
                                    Command="{Binding ResetRotationCmd}"
                                    ToolTip="Reset to 0°"/>
                            <Button Content="↻ 90°" Width="52" Height="28" Margin="3" 
                                    Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" 
                                    Foreground="White" FontSize="11" Cursor="Hand"
                                    Command="{Binding RotateRight90Cmd}"
                                    ToolTip="Rotate 90° Clockwise"/>
                            <Button Content="↕ Flip" Width="52" Height="28" Margin="3" 
                                    Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" 
                                    Foreground="White" FontSize="11" Cursor="Hand"
                                    Command="{Binding FlipVerticalCmd}"
                                    ToolTip="Flip Vertical"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
                </Expander>
            </Border>
            
            <!-- Z-Order Section -->
            <Border BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="0,0,0,1">
                <Expander Header="Z-Order" Style="{StaticResource ModernExpander}" IsExpanded="True">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="15" Foreground="#CCCCCC" Margin="0,12,0,8"/>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="0,4,0,8">
                    <Grid Width="180" VerticalAlignment="Center" HorizontalAlignment="Left" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button ToolTip="Bring To Front" Grid.Row="0" Grid.Column="0" Width="48" Height="36" 
                                    Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1"
                                    Command="{Binding BringToFrontCmd}" Cursor="Hand">
                                <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <!-- Base rectangle -->
                                            <RectangleGeometry Rect="2,6,12,8" />
                                            <!-- Front rectangle -->
                                            <RectangleGeometry Rect="4,2,12,8" />
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Button>
                            <Button ToolTip="Send To Back" Grid.Row="0" Grid.Column="1" Width="48" Height="36" 
                                    Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1"
                                    Command="{Binding SendToBackCmd}" Cursor="Hand">
                                <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <!-- Front rectangle -->
                                            <RectangleGeometry Rect="4,2,12,8" />
                                            <!-- Back rectangle -->
                                            <RectangleGeometry Rect="2,6,12,8" />
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Button>
                            <Button ToolTip="Duplicate" Grid.Row="0" Grid.Column="2" Width="48" Height="36" 
                                    Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1"
                                    Command="{Binding DuplicateSelectedCmd}" Cursor="Hand">
                                <Path Width="16" Height="16" Stretch="Uniform" Fill="White">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <!-- Original rectangle -->
                                            <RectangleGeometry Rect="2,2,10,10" />
                                            <!-- Duplicate rectangle offset -->
                                            <RectangleGeometry Rect="6,6,10,10" />
                                        </GeometryGroup>
                                    </Path.Data>
                                </Path>
                            </Button>

                        </Grid>
                </StackPanel>
                </Expander>
            </Border>
            
            <!-- Aspect Ratio Section - Only visible for images and placeholders -->
            <Border BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="0,0,0,1">
                <Expander x:Name="AspectRatioPanel" Header="Aspect Ratio" Style="{StaticResource ModernExpander}" IsExpanded="True" Visibility="Collapsed">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="15" Foreground="#CCCCCC" Margin="0,12,0,8"/>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="0,4,0,8">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="15,0">
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Cursor="Hand" Margin="15,0,15,0">
                                <Image x:Name="imageAspectRatioLock" Source="{Binding SelectedItemsAspectRatioLockSource}" Width="28" Stretch="UniformToFill" Margin="5,5,5,2" VerticalAlignment="Center"
                                       MouseLeftButtonDown="ToggleLockAspectRatio_Click" ToolTip="Lock/Unlock Aspect Ratio"/>
                                <TextBlock Text="Lock Proportions" FontSize="11" Foreground="{StaticResource SurfaceTextSecondaryBrush}" HorizontalAlignment="Center" Margin="0,0,0,5"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center" Margin="15,0,0,0">
                                <TextBlock Text="When locked:" FontSize="10" Foreground="{StaticResource SurfaceTextTertiaryBrush}" Margin="0,0,0,3"/>
                                <TextBlock Text="• Maintains width/height ratio" FontSize="9" Foreground="{StaticResource SurfaceTextTertiaryBrush}" Margin="0,0,0,1"/>
                                <TextBlock Text="• Prevents image distortion" FontSize="9" Foreground="{StaticResource SurfaceTextTertiaryBrush}" Margin="0,0,0,1"/>
                                <TextBlock Text="• Keeps original proportions" FontSize="9" Foreground="{StaticResource SurfaceTextTertiaryBrush}"/>
                            </StackPanel>
                        </StackPanel>
                </StackPanel>
                </Expander>
            </Border>
            
            <!-- Placeholder Settings Section - Only visible for placeholders -->
            <Border BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="0,0,0,1">
                <Expander x:Name="PlaceholderPanel" Header="Placeholder Settings" Style="{StaticResource ModernExpander}" IsExpanded="True" Visibility="Collapsed">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="15" Foreground="#CCCCCC" Margin="0,12,0,8"/>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="0,4,0,8">
                    <StackPanel Orientation="Vertical" Margin="10,5">
                            <StackPanel Orientation="Vertical" Margin="0,2">
                                <TextBlock Text="Picture Number:" FontSize="12" Foreground="White" Margin="0,0,0,5" VerticalAlignment="Center"/>
                                <!-- Touch-friendly number picker -->
                                <Grid Width="220">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="60"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Decrease button -->
                                    <Button Grid.Column="0" Content="-" FontSize="20" FontWeight="Bold"
                                            Height="44" Background="#404040" Foreground="White" 
                                            BorderBrush="#606060" BorderThickness="1" Cursor="Hand"
                                            Click="DecreasePlaceholderNumber_Click"/>
                                    
                                    <!-- Number display -->
                                    <Border Grid.Column="1" BorderBrush="#CCCCCC" BorderThickness="1,1,1,1" 
                                            Background="{StaticResource SurfaceInputBrush}" Height="44">
                                        <TextBox Text="{Binding SelectedPlaceholderItem.PlaceholderNo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                 Background="Transparent" Foreground="White" BorderThickness="0" 
                                                 FontSize="18" FontWeight="Bold"
                                                 VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                                 PreviewTextInput="NumberValidationTextBox"/>
                                    </Border>
                                    
                                    <!-- Increase button -->
                                    <Button Grid.Column="2" Content="+" FontSize="20" FontWeight="Bold"
                                            Height="44" Background="#404040" Foreground="White" 
                                            BorderBrush="#606060" BorderThickness="1" Cursor="Hand"
                                            Click="IncreasePlaceholderNumber_Click"/>
                                </Grid>
                            </StackPanel>
                            <TextBlock Text="This number determines the order in which photos will be inserted" 
                                       FontSize="9" Foreground="{StaticResource SurfaceTextTertiaryBrush}" Margin="0,5,0,0" TextWrapping="Wrap"/>
                            <TextBlock Text="Tip: Use + and - buttons for touch input" 
                                       FontSize="9" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Margin="0,2,0,0" TextWrapping="Wrap"/>
                        </StackPanel>
                </StackPanel>
                </Expander>
            </Border>
            
            <!-- Layers Section -->
            <Border BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="0,0,0,1">
                <Expander Header="Layers" Style="{StaticResource ModernExpander}" IsExpanded="True">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="15" Foreground="#CCCCCC" Margin="0,12,0,8"/>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="0,4,0,8">
                    <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!-- Top Layer controls -->
                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10,0,10,5">
                                <Button ToolTip="Move Up" Width="48" Height="36" Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" 
                                        Foreground="#CCCCCC" Command="{Binding MoveLayerUpCmd}" Margin="0,0,2,0">
                                    <TextBlock FontFamily="{StaticResource SegoeMDL2}" Text="{StaticResource MDL2_Up}" Style="{StaticResource MDL2IconSmall}" Foreground="#CCCCCC"/>
                                </Button>
                                <Button ToolTip="Move Down" Width="48" Height="36" Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" 
                                        Foreground="#CCCCCC" Command="{Binding MoveLayerDownCmd}" Margin="0,0,2,0">
                                    <TextBlock FontFamily="{StaticResource SegoeMDL2}" Text="{StaticResource MDL2_Down}" Style="{StaticResource MDL2IconSmall}" Foreground="#CCCCCC"/>
                                </Button>
                                <Button ToolTip="Duplicate Layer" Width="48" Height="36" Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" 
                                        Foreground="#CCCCCC" Command="{Binding DuplicateSelectedCmd}" Margin="0,0,2,0">
                                    <TextBlock FontFamily="{StaticResource SegoeMDL2}" Text="{StaticResource MDL2_Copy}" Style="{StaticResource MDL2IconSmall}" Foreground="#CCCCCC"/>
                                </Button>
                                <Button ToolTip="Delete Layer" Width="48" Height="36" Background="{StaticResource SurfaceAccentDangerBrush}" BorderBrush="{StaticResource SurfaceAccentDangerBrush}" BorderThickness="1" 
                                        Foreground="#CCCCCC" Command="{Binding DeleteLayerCmd}">
                                    <TextBlock FontFamily="{StaticResource SegoeMDL2}" Text="{StaticResource MDL2_Delete}" Style="{StaticResource MDL2IconSmall}" Foreground="#CCCCCC"/>
                                </Button>
                            </StackPanel>
                            <!-- Layers list -->
                            <Border Grid.Row="1" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Background="{StaticResource SurfacePrimaryBrush}">
                                <ListBox x:Name="LayersList" ItemsSource="{Binding CanvasLayers}" 
                                         SelectedItem="{Binding SelectedLayer, Mode=TwoWay}"
                                         Background="Transparent" BorderThickness="0"
                                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                                         ScrollViewer.CanContentScroll="True">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Background="Transparent" Height="48" Margin="2" HorizontalAlignment="Stretch">
                                                <Grid.Style>
                                                    <Style TargetType="Grid">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                                <Setter Property="Opacity" Value="0.4"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="36"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <!-- Layer thumbnail/icon -->
                                                <Border Grid.Column="0" Background="{StaticResource SurfacePanelBrush}" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Margin="2">
                                                    <ContentPresenter Content="{Binding}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <ContentPresenter.ContentTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding LayerTypeIcon}" FontSize="14" Foreground="White" 
                                                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </DataTemplate>
                                                        </ContentPresenter.ContentTemplate>
                                                    </ContentPresenter>
                                                </Border>
                                                <!-- Content area with text and icons -->
                                                <Grid Grid.Column="1">
                                                    <!-- Layer name and info -->
                                                    <StackPanel HorizontalAlignment="Left" Margin="5,2,70,2" VerticalAlignment="Center">
                                                        <TextBlock Text="{Binding LayerName}" FontSize="13" Foreground="White" FontWeight="Bold">
                                                            <TextBlock.Style>
                                                                <Style TargetType="TextBlock">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                                            <Setter Property="TextDecorations" Value="Strikethrough"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBlock.Style>
                                                        </TextBlock>
                                                        <TextBlock Text="{Binding LayerInfo}" FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}"/>
                                                    </StackPanel>
                                                    <!-- Icons positioned on the right -->
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0">
                                                        <!-- Lock toggle -->
                                                        <Button Width="24" Height="24" Margin="2,0" 
                                                                Background="Transparent" BorderThickness="0" Cursor="Hand"
                                                                Command="{Binding DataContext.ToggleLayerLockCmd, RelativeSource={RelativeSource AncestorType=Page}}"
                                                                CommandParameter="{Binding}"
                                                                ToolTip="Toggle Layer Lock">
                                                            <TextBlock FontFamily="{StaticResource SegoeMDL2}" FontSize="14" Foreground="White">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="TextBlock">
                                                                        <Setter Property="Text" Value="{StaticResource MDL2_Unlock}"/>
                                                                        <Setter Property="Foreground" Value="{StaticResource SurfaceTextTertiaryBrush}"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsLocked}" Value="True">
                                                                                <Setter Property="Text" Value="{StaticResource MDL2_Lock}"/>
                                                                                <Setter Property="Foreground" Value="#FFAA44"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                        </Button>
                                                        <!-- Visibility toggle with eye icon -->
                                                        <Button Width="24" Height="24" Margin="2,0" 
                                                                Background="Transparent" BorderThickness="0" Cursor="Hand"
                                                                Command="{Binding DataContext.ToggleLayerVisibilityCmd, RelativeSource={RelativeSource AncestorType=Page}}"
                                                                CommandParameter="{Binding}"
                                                                ToolTip="Toggle Visibility">
                                                            <TextBlock FontFamily="{StaticResource SegoeMDL2}" FontSize="16" Foreground="White">
                                                                <TextBlock.Style>
                                                                    <Style TargetType="TextBlock">
                                                                        <Setter Property="Text" Value="{StaticResource MDL2_View}"/>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                                                                <Setter Property="Text" Value="{StaticResource MDL2_Hide}"/>
                                                                                <Setter Property="Foreground" Value="{StaticResource SurfaceTextTertiaryBrush}"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Style>
                                                            </TextBlock>
                                                        </Button>
                                                    </StackPanel>
                                                </Grid>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource SurfaceAccentCyanBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#555555"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.ItemContainerStyle>
                                </ListBox>
                            </Border>
                        </Grid>
                </StackPanel>
                </Expander>
            </Border>
            
            <!-- Text Formatting Section - Only visible when text item is selected -->
            <Border BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="0,0,0,1">
                <Expander x:Name="TextFormattingPanel" Header="Text Formatting" Style="{StaticResource ModernExpander}" IsExpanded="True" Visibility="Collapsed">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="15" Foreground="#CCCCCC" Margin="0,12,0,8"/>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="0,4,0,8">
                    <StackPanel Orientation="Vertical">
                            <!-- Text Content -->
                            <StackPanel Orientation="Vertical" Margin="5,2,5,2">
                                <TextBlock Text="Text:" FontSize="12" Foreground="White" Margin="0,5,0,2"/>
                                <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2">
                                    <TextBox Text="{Binding SelectedTextItem.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                             Background="{StaticResource SurfaceInputBrush}" Foreground="White" BorderThickness="0" 
                                             Padding="5" TextWrapping="Wrap" AcceptsReturn="True" MinHeight="40"/>
                                </Border>
                            </StackPanel>
                            
                            <!-- Font Family -->
                            <StackPanel Orientation="Vertical" Margin="5,2,5,2">
                                <TextBlock Text="Font:" FontSize="12" Foreground="White" Margin="0,5,0,2"/>
                                <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2">
                                    <ComboBox ItemsSource="{Binding SystemFonts}" 
                                              SelectedItem="{Binding SelectedTextItem.FontFamily, Mode=TwoWay}" 
                                              Background="{StaticResource SurfaceInputBrush}" Foreground="White" BorderThickness="0" 
                                              MaxDropDownHeight="200"/>
                                </Border>
                            </StackPanel>
                            
                            <!-- Font Size -->
                            <StackPanel Orientation="Horizontal" Margin="5,2,5,2">
                                <StackPanel Orientation="Vertical" Width="80">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Size:" FontSize="12" Foreground="White" Width="30"/>
                                        <TextBlock Text="{Binding SelectedTextItem.FontSize, StringFormat={}{0:F0}}" 
                                                   FontSize="12" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Width="40"/>
                                    </StackPanel>
                                    <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2">
                                        <TextBox Text="{Binding SelectedTextItem.FontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                 Background="{StaticResource SurfaceInputBrush}" Foreground="White" BorderThickness="0" Padding="5"/>
                                    </Border>
                                </StackPanel>
                                
                                <!-- Font Size Slider -->
                                <StackPanel Orientation="Vertical" Width="140" Margin="10,0,0,0" VerticalAlignment="Bottom">
                                    <Slider Value="{Binding SelectedTextItem.FontSize, Mode=TwoWay}" 
                                            Minimum="8" Maximum="500" SmallChange="1" LargeChange="10"
                                            TickFrequency="10" IsSnapToTickEnabled="False"
                                            Background="#666666" Foreground="{StaticResource SurfaceAccentCyanBrush}"
                                            Height="22" Margin="0,0,0,5"
                                            ToolTip="Drag to adjust font size (8-500pt) or type value directly"/>
                                </StackPanel>
                            </StackPanel>
                            
                            <!-- Font Style Buttons - Moved to separate row for visibility -->
                            <StackPanel Orientation="Horizontal" Margin="5,5,5,5" HorizontalAlignment="Left">
                                <TextBlock Text="Style:" FontSize="12" Foreground="White" Width="40" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                <!-- Bold Button -->
                                <ToggleButton IsChecked="{Binding SelectedTextItem.IsBold, Mode=TwoWay}" 
                                                  Width="30" Height="25" Margin="2,0" ToolTip="Bold (Ctrl+B)">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Background" Value="#444444"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource SurfaceTextTertiaryBrush}"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="2">
                                                                <TextBlock Text="B" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                                           FontWeight="Bold" FontSize="14"
                                                                           Foreground="{TemplateBinding Foreground}"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter TargetName="border" Property="Background" Value="{StaticResource SurfaceAccentCyanBrush}"/>
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#6BA5E7"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="border" Property="Background" Value="#555555"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                
                                <!-- Italic Button -->
                                <ToggleButton IsChecked="{Binding SelectedTextItem.IsItalic, Mode=TwoWay}" 
                                                  Width="30" Height="25" Margin="2,0" ToolTip="Italic (Ctrl+I)">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Background" Value="#444444"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource SurfaceTextTertiaryBrush}"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="2">
                                                                <TextBlock Text="I" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                                           FontStyle="Italic" FontSize="14" FontFamily="Georgia"
                                                                           Foreground="{TemplateBinding Foreground}"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter TargetName="border" Property="Background" Value="{StaticResource SurfaceAccentCyanBrush}"/>
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#6BA5E7"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="border" Property="Background" Value="#555555"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                
                                <!-- Underline Button -->
                                <ToggleButton IsChecked="{Binding SelectedTextItem.IsUnderlined, Mode=TwoWay}" 
                                                  Width="30" Height="25" Margin="2,0" ToolTip="Underline (Ctrl+U)">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="Background" Value="#444444"/>
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource SurfaceTextTertiaryBrush}"/>
                                                <Setter Property="BorderThickness" Value="1"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="2">
                                                                <TextBlock Text="U" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                                           TextDecorations="Underline" FontSize="14"
                                                                           Foreground="{TemplateBinding Foreground}"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter TargetName="border" Property="Background" Value="{StaticResource SurfaceAccentCyanBrush}"/>
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#6BA5E7"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="border" Property="Background" Value="#555555"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </StackPanel>
                            
                            <!-- Text Color -->
                            <StackPanel Orientation="Vertical" Margin="5,2,5,2">
                                <TextBlock Text="Color:" FontSize="12" Foreground="White" Margin="0,5,0,2"/>
                                <StackPanel Orientation="Horizontal">
                                    <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Width="30" Height="25" 
                                            Background="{Binding SelectedTextItem.Foreground}" Margin="0,0,5,0"/>
                                    <Button Content="Choose" Width="60" Height="25" Background="{StaticResource SurfacePanelBrush}" Foreground="{StaticResource SurfaceTextPrimaryBrush}" 
                                            BorderBrush="#666666" Click="ChooseTextColor_Click"/>
                                </StackPanel>
                                <!-- Quick color palette -->
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                    <Button Width="20" Height="20" Background="Black" Margin="1" Click="QuickColor_Click" Tag="Black"/>
                                    <Button Width="20" Height="20" Background="White" Margin="1" Click="QuickColor_Click" Tag="White"/>
                                    <Button Width="20" Height="20" Background="Red" Margin="1" Click="QuickColor_Click" Tag="Red"/>
                                    <Button Width="20" Height="20" Background="Green" Margin="1" Click="QuickColor_Click" Tag="Green"/>
                                    <Button Width="20" Height="20" Background="Blue" Margin="1" Click="QuickColor_Click" Tag="Blue"/>
                                    <Button Width="20" Height="20" Background="Yellow" Margin="1" Click="QuickColor_Click" Tag="Yellow"/>
                                    <Button Width="20" Height="20" Background="Orange" Margin="1" Click="QuickColor_Click" Tag="Orange"/>
                                    <Button Width="20" Height="20" Background="Purple" Margin="1" Click="QuickColor_Click" Tag="Purple"/>
                                </StackPanel>
                            </StackPanel>
                            
                            <!-- Text Alignment -->
                            <StackPanel Orientation="Horizontal" Margin="5,2,5,2">
                                <TextBlock Text="Align:" FontSize="12" Foreground="White" VerticalAlignment="Center" Width="40"/>
                                <ComboBox SelectedItem="{Binding SelectedTextItem.TextAlignment, Mode=TwoWay}" 
                                          Background="{StaticResource SurfaceInputBrush}" Foreground="White" BorderThickness="0" Width="80">
                                    <ComboBox.Items>
                                        <TextAlignment>Left</TextAlignment>
                                        <TextAlignment>Center</TextAlignment>
                                        <TextAlignment>Right</TextAlignment>
                                    </ComboBox.Items>
                                </ComboBox>
                            </StackPanel>
                            
                            <!-- Text Effects -->
                            <Expander Header="Text Effects" Foreground="White" FontSize="14" FontWeight="Bold" IsExpanded="False" Margin="5,5,5,0">
                                <StackPanel Orientation="Vertical">
                                    <!-- Drop Shadow -->
                                    <StackPanel Orientation="Vertical" Margin="0,5,0,5">
                                        <CheckBox Content="Drop Shadow" IsChecked="{Binding SelectedTextItem.HasShadow, Mode=TwoWay}" 
                                                  Foreground="White" FontSize="12" Margin="0,0,0,5"/>
                                        
                                        <!-- Shadow Offset X -->
                                        <StackPanel Orientation="Vertical" IsEnabled="{Binding SelectedTextItem.HasShadow}" Margin="0,2,0,2">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Offset X:" FontSize="10" Foreground="White" Width="50"/>
                                                <TextBlock Text="{Binding SelectedTextItem.ShadowOffsetX, StringFormat={}{0:F1}}" 
                                                           FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Width="30"/>
                                            </StackPanel>
                                            <Slider Value="{Binding SelectedTextItem.ShadowOffsetX, Mode=TwoWay}" 
                                                    Minimum="-20" Maximum="20" SmallChange="0.5" LargeChange="2"
                                                    TickFrequency="5" TickPlacement="BottomRight"
                                                    Width="140" Height="20" Margin="0,2,0,0"
                                                    Style="{StaticResource CompactSliderStyle}"
                                                    ToolTip="Adjust horizontal shadow offset"/>
                                        </StackPanel>
                                        
                                        <!-- Shadow Offset Y -->
                                        <StackPanel Orientation="Vertical" IsEnabled="{Binding SelectedTextItem.HasShadow}" Margin="0,2,0,2">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Offset Y:" FontSize="10" Foreground="White" Width="50"/>
                                                <TextBlock Text="{Binding SelectedTextItem.ShadowOffsetY, StringFormat={}{0:F1}}" 
                                                           FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Width="30"/>
                                            </StackPanel>
                                            <Slider Value="{Binding SelectedTextItem.ShadowOffsetY, Mode=TwoWay}" 
                                                    Minimum="-20" Maximum="20" SmallChange="0.5" LargeChange="2"
                                                    TickFrequency="5" TickPlacement="BottomRight"
                                                    Width="140" Height="20" Margin="0,2,0,0"
                                                    Style="{StaticResource CompactSliderStyle}"
                                                    ToolTip="Adjust vertical shadow offset"/>
                                        </StackPanel>
                                        
                                        <!-- Shadow Blur Radius -->
                                        <StackPanel Orientation="Vertical" IsEnabled="{Binding SelectedTextItem.HasShadow}" Margin="0,2,0,2">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Blur:" FontSize="10" Foreground="White" Width="50"/>
                                                <TextBlock Text="{Binding SelectedTextItem.ShadowBlurRadius, StringFormat={}{0:F1}}" 
                                                           FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Width="30"/>
                                            </StackPanel>
                                            <Slider Value="{Binding SelectedTextItem.ShadowBlurRadius, Mode=TwoWay}" 
                                                    Minimum="0" Maximum="50" SmallChange="0.5" LargeChange="5"
                                                    TickFrequency="10" TickPlacement="BottomRight"
                                                    Width="140" Height="20" Margin="0,2,0,0"
                                                    Style="{StaticResource CompactSliderStyle}"
                                                    ToolTip="Adjust shadow blur radius"/>
                                        </StackPanel>
                                    </StackPanel>
                                    
                                    <!-- Outline -->
                                    <StackPanel Orientation="Vertical" Margin="0,5,0,5">
                                        <CheckBox Content="Outline" IsChecked="{Binding SelectedTextItem.HasOutline, Mode=TwoWay}" 
                                                  Foreground="White" FontSize="12" Margin="0,0,0,5"/>
                                        
                                        <!-- Outline Thickness -->
                                        <StackPanel Orientation="Vertical" IsEnabled="{Binding SelectedTextItem.HasOutline}" Margin="0,2,0,2">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Thickness:" FontSize="10" Foreground="White" Width="60"/>
                                                <TextBlock Text="{Binding SelectedTextItem.OutlineThickness, StringFormat={}{0:F1}}" 
                                                           FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Width="30"/>
                                            </StackPanel>
                                            <Slider Value="{Binding SelectedTextItem.OutlineThickness, Mode=TwoWay}" 
                                                    Minimum="0" Maximum="10" SmallChange="0.1" LargeChange="1"
                                                    TickFrequency="2" TickPlacement="BottomRight"
                                                    Width="140" Height="20" Margin="0,2,0,0"
                                                    Style="{StaticResource CompactSliderStyle}"
                                                    ToolTip="Adjust outline thickness"/>
                                        </StackPanel>
                                        
                                        <!-- Outline Color -->
                                        <StackPanel Orientation="Vertical" IsEnabled="{Binding SelectedTextItem.HasOutline}" Margin="0,2,0,2">
                                            <TextBlock Text="Outline Color:" FontSize="10" Foreground="White" Margin="0,5,0,2"/>
                                            <StackPanel Orientation="Horizontal">
                                                <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Width="30" Height="25" 
                                                        Background="{Binding SelectedTextItem.OutlineColor}" Margin="0,0,5,0"/>
                                                <Button Content="Choose" Width="60" Height="25" Background="{StaticResource SurfacePanelBrush}" Foreground="{StaticResource SurfaceTextPrimaryBrush}" 
                                                        BorderBrush="#666666" Click="ChooseOutlineColor_Click"/>
                                            </StackPanel>
                                            <!-- Quick outline color palette -->
                                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                                <Button Width="18" Height="18" Background="Black" Margin="1" Click="QuickOutlineColor_Click" Tag="Black"/>
                                                <Button Width="18" Height="18" Background="White" Margin="1" Click="QuickOutlineColor_Click" Tag="White"/>
                                                <Button Width="18" Height="18" Background="Red" Margin="1" Click="QuickOutlineColor_Click" Tag="Red"/>
                                                <Button Width="18" Height="18" Background="Blue" Margin="1" Click="QuickOutlineColor_Click" Tag="Blue"/>
                                                <Button Width="18" Height="18" Background="Yellow" Margin="1" Click="QuickOutlineColor_Click" Tag="Yellow"/>
                                                <Button Width="18" Height="18" Background="Green" Margin="1" Click="QuickOutlineColor_Click" Tag="Green"/>
                                                <Button Width="18" Height="18" Background="Orange" Margin="1" Click="QuickOutlineColor_Click" Tag="Orange"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Expander>
                        </StackPanel>
                </StackPanel>
                </Expander>
            </Border>
            
            <!-- Shape Properties Section - Only visible when shape item is selected -->
            <Border BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="0,0,0,1">
                <Expander x:Name="ShapePropertiesPanel" Header="Shape Properties" Style="{StaticResource ModernExpander}" IsExpanded="True" Visibility="Collapsed">
                    <Expander.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="15" Foreground="#CCCCCC" Margin="0,12,0,8"/>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="0,4,0,8">
                    <StackPanel Orientation="Vertical">
                        
                        <!-- Shape Type Display -->
                        <StackPanel Orientation="Vertical" Margin="5,2,5,8">
                            <TextBlock Text="Shape Type:" FontSize="12" Foreground="White" Margin="0,5,0,2"/>
                            <TextBlock Text="{Binding SelectedShapeItem.ShapeType}" FontSize="14" Foreground="{StaticResource SurfaceTextSecondaryBrush}" FontWeight="Bold"/>
                        </StackPanel>
                        
                        <!-- Fill Color -->
                        <StackPanel Orientation="Vertical" Margin="5,2,5,8">
                            <TextBlock Text="Fill Color:" FontSize="12" Foreground="White" Margin="0,5,0,2"/>
                            <StackPanel Orientation="Horizontal">
                                <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Width="30" Height="25" 
                                        Background="{Binding SelectedShapeItem.Fill}" Margin="0,0,5,0"/>
                                <Button Content="Choose" Width="60" Height="25" Background="{StaticResource SurfacePanelBrush}" Foreground="{StaticResource SurfaceTextPrimaryBrush}" 
                                        BorderBrush="#666666" Click="ChooseShapeFillColor_Click"/>
                                <CheckBox Content="No Fill" IsChecked="{Binding SelectedShapeItem.HasNoFill, Mode=TwoWay}" 
                                          Foreground="White" FontSize="10" Margin="10,0,0,0" VerticalAlignment="Center"/>
                            </StackPanel>
                            <!-- Quick fill color palette -->
                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                <Button Width="20" Height="20" Background="Transparent" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Margin="1" Click="QuickShapeFillColor_Click" Tag="Transparent" ToolTip="Transparent"/>
                                <Button Width="20" Height="20" Background="Black" Margin="1" Click="QuickShapeFillColor_Click" Tag="Black"/>
                                <Button Width="20" Height="20" Background="White" Margin="1" Click="QuickShapeFillColor_Click" Tag="White"/>
                                <Button Width="20" Height="20" Background="Red" Margin="1" Click="QuickShapeFillColor_Click" Tag="Red"/>
                                <Button Width="20" Height="20" Background="Green" Margin="1" Click="QuickShapeFillColor_Click" Tag="Green"/>
                                <Button Width="20" Height="20" Background="Blue" Margin="1" Click="QuickShapeFillColor_Click" Tag="Blue"/>
                                <Button Width="20" Height="20" Background="Yellow" Margin="1" Click="QuickShapeFillColor_Click" Tag="Yellow"/>
                                <Button Width="20" Height="20" Background="Orange" Margin="1" Click="QuickShapeFillColor_Click" Tag="Orange"/>
                                <Button Width="20" Height="20" Background="Purple" Margin="1" Click="QuickShapeFillColor_Click" Tag="Purple"/>
                                <Button Width="20" Height="20" Background="LightBlue" Margin="1" Click="QuickShapeFillColor_Click" Tag="LightBlue"/>
                            </StackPanel>
                        </StackPanel>
                        
                        <!-- Stroke Properties -->
                        <StackPanel Orientation="Vertical" Margin="5,2,5,8">
                            <TextBlock Text="Stroke:" FontSize="12" Foreground="White" Margin="0,5,0,2"/>
                            
                            <!-- Stroke Color -->
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                <TextBlock Text="Color:" FontSize="10" Foreground="White" Width="45" VerticalAlignment="Center"/>
                                <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Width="25" Height="20" 
                                        Background="{Binding SelectedShapeItem.Stroke}" Margin="0,0,5,0"/>
                                <Button Content="Choose" Width="50" Height="20" Background="{StaticResource SurfacePanelBrush}" Foreground="{StaticResource SurfaceTextPrimaryBrush}" 
                                        BorderBrush="#666666" Click="ChooseShapeStrokeColor_Click" FontSize="9"/>
                                <CheckBox Content="No Stroke" IsChecked="{Binding SelectedShapeItem.HasNoStroke, Mode=TwoWay}" 
                                          Foreground="White" FontSize="9" Margin="8,0,0,0" VerticalAlignment="Center"/>
                            </StackPanel>
                            
                            <!-- Quick stroke color palette -->
                            <StackPanel Orientation="Horizontal" Margin="45,0,0,5">
                                <Button Width="16" Height="16" Background="Transparent" BorderBrush="{StaticResource SurfaceBorderBrush}" BorderThickness="1" Margin="1" Click="QuickShapeStrokeColor_Click" Tag="Transparent" ToolTip="No Stroke"/>
                                <Button Width="16" Height="16" Background="Black" Margin="1" Click="QuickShapeStrokeColor_Click" Tag="Black"/>
                                <Button Width="16" Height="16" Background="White" Margin="1" Click="QuickShapeStrokeColor_Click" Tag="White"/>
                                <Button Width="16" Height="16" Background="Red" Margin="1" Click="QuickShapeStrokeColor_Click" Tag="Red"/>
                                <Button Width="16" Height="16" Background="Blue" Margin="1" Click="QuickShapeStrokeColor_Click" Tag="Blue"/>
                                <Button Width="16" Height="16" Background="Green" Margin="1" Click="QuickShapeStrokeColor_Click" Tag="Green"/>
                                <Button Width="16" Height="16" Background="Gray" Margin="1" Click="QuickShapeStrokeColor_Click" Tag="Gray"/>
                                <Button Width="16" Height="16" Background="DarkGray" Margin="1" Click="QuickShapeStrokeColor_Click" Tag="DarkGray"/>
                            </StackPanel>
                            
                            <!-- Stroke Thickness -->
                            <StackPanel Orientation="Vertical" Margin="0,2,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Thickness:" FontSize="10" Foreground="White" Width="60"/>
                                    <TextBlock Text="{Binding SelectedShapeItem.StrokeThickness, StringFormat={}{0:F1}}" 
                                               FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Width="30"/>
                                </StackPanel>
                                <Slider Value="{Binding SelectedShapeItem.StrokeThickness, Mode=TwoWay}" 
                                        Minimum="0" Maximum="20" SmallChange="0.5" LargeChange="2"
                                        TickFrequency="5" TickPlacement="BottomRight"
                                        Width="180" Height="20" Margin="0,2,0,0"
                                        Background="#666666" Foreground="{StaticResource SurfaceAccentCyanBrush}"
                                        ToolTip="Adjust stroke thickness (0-20px)"/>
                            </StackPanel>
                        </StackPanel>
                        
                        <!-- Drop Shadow -->
                        <StackPanel Orientation="Vertical" Margin="5,2,5,8">
                            <CheckBox Content="Drop Shadow" IsChecked="{Binding SelectedShapeItem.HasShadow, Mode=TwoWay}" 
                                      Foreground="White" FontSize="12" Margin="0,5,0,5"/>
                            
                            <StackPanel IsEnabled="{Binding SelectedShapeItem.HasShadow}" Margin="15,0,0,0">
                                <!-- Shadow Color -->
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                                    <TextBlock Text="Color:" FontSize="10" Foreground="White" Width="45" VerticalAlignment="Center"/>
                                    <Border BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="2" Width="25" Height="20" Margin="0,0,5,0">
                                        <Border.Background>
                                            <SolidColorBrush Color="{Binding SelectedShapeItem.ShadowColor}"/>
                                        </Border.Background>
                                    </Border>
                                    <Button Content="Choose" Width="50" Height="20" Background="{StaticResource SurfacePanelBrush}" Foreground="{StaticResource SurfaceTextPrimaryBrush}" 
                                            BorderBrush="#666666" Click="ChooseShapeShadowColor_Click" FontSize="9"/>
                                </StackPanel>
                                
                                <!-- Quick shadow color palette -->
                                <StackPanel Orientation="Horizontal" Margin="45,0,0,5">
                                    <Button Width="16" Height="16" Background="Gray" Margin="1" Click="QuickShapeShadowColor_Click" Tag="Gray"/>
                                    <Button Width="16" Height="16" Background="Black" Margin="1" Click="QuickShapeShadowColor_Click" Tag="Black"/>
                                    <Button Width="16" Height="16" Background="DarkGray" Margin="1" Click="QuickShapeShadowColor_Click" Tag="DarkGray"/>
                                    <Button Width="16" Height="16" Background="LightGray" Margin="1" Click="QuickShapeShadowColor_Click" Tag="LightGray"/>
                                </StackPanel>
                                
                                <!-- Shadow Offset X -->
                                <StackPanel Orientation="Vertical" Margin="0,2,0,2">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Offset X:" FontSize="10" Foreground="White" Width="50"/>
                                        <TextBlock Text="{Binding SelectedShapeItem.ShadowOffsetX, StringFormat={}{0:F1}}" 
                                                   FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Width="30"/>
                                    </StackPanel>
                                    <Slider Value="{Binding SelectedShapeItem.ShadowOffsetX, Mode=TwoWay}" 
                                            Minimum="-20" Maximum="20" SmallChange="0.5" LargeChange="2"
                                            TickFrequency="5" TickPlacement="BottomRight"
                                            Width="140" Height="20" Margin="0,2,0,0"
                                            Background="#666666" Foreground="{StaticResource SurfaceAccentCyanBrush}"
                                            ToolTip="Adjust horizontal shadow offset"/>
                                </StackPanel>
                                
                                <!-- Shadow Offset Y -->
                                <StackPanel Orientation="Vertical" Margin="0,2,0,2">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Offset Y:" FontSize="10" Foreground="White" Width="50"/>
                                        <TextBlock Text="{Binding SelectedShapeItem.ShadowOffsetY, StringFormat={}{0:F1}}" 
                                                   FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Width="30"/>
                                    </StackPanel>
                                    <Slider Value="{Binding SelectedShapeItem.ShadowOffsetY, Mode=TwoWay}" 
                                            Minimum="-20" Maximum="20" SmallChange="0.5" LargeChange="2"
                                            TickFrequency="5" TickPlacement="BottomRight"
                                            Width="140" Height="20" Margin="0,2,0,0"
                                            Background="#666666" Foreground="{StaticResource SurfaceAccentCyanBrush}"
                                            ToolTip="Adjust vertical shadow offset"/>
                                </StackPanel>
                                
                                <!-- Shadow Blur Radius -->
                                <StackPanel Orientation="Vertical" Margin="0,2,0,2">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Blur:" FontSize="10" Foreground="White" Width="50"/>
                                        <TextBlock Text="{Binding SelectedShapeItem.ShadowBlurRadius, StringFormat={}{0:F1}}" 
                                                   FontSize="10" Foreground="{StaticResource SurfaceTextSecondaryBrush}" Width="30"/>
                                    </StackPanel>
                                    <Slider Value="{Binding SelectedShapeItem.ShadowBlurRadius, Mode=TwoWay}" 
                                            Minimum="0" Maximum="50" SmallChange="0.5" LargeChange="5"
                                            TickFrequency="10" TickPlacement="BottomRight"
                                            Width="140" Height="20" Margin="0,2,0,0"
                                            Background="#666666" Foreground="{StaticResource SurfaceAccentCyanBrush}"
                                            ToolTip="Adjust shadow blur radius"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        
                    </StackPanel>
                </StackPanel>
                </Expander>
            </Border>
            
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
