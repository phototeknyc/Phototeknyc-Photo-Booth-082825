<UserControl x:Class="Photobooth.Pages.PhotoboothSettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Photobooth.Pages"
             xmlns:properties="clr-namespace:Photobooth.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800"
             Background="{StaticResource SurfaceBackgroundBrush}">
    
    <UserControl.Resources>
        <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        
        <!-- Wide ScrollBar Style for Touch/Mouse -->
        <Style x:Key="WideScrollBar" TargetType="{x:Type ScrollBar}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Background" Value="#1A1E37"/>
            <Setter Property="BorderBrush" Value="#2A2E47"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="20">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="10"/>
                            
                            <Track x:Name="PART_Track" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border x:Name="ThumbBorder"
                                                        CornerRadius="8"
                                                        Margin="2">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Color="#667EEA" Offset="0"/>
                                                            <GradientStop Color="#764BA2" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Border.Effect>
                                                        <DropShadowEffect Color="#667EEA" BlurRadius="8" ShadowDepth="0" Opacity="0.5"/>
                                                    </Border.Effect>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="ThumbBorder" Property="Background">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <GradientStop Color="#7986EA" Offset="0"/>
                                                                    <GradientStop Color="#865BA2" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter TargetName="ThumbBorder" Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect Color="#667EEA" BlurRadius="12" ShadowDepth="0" Opacity="0.8"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="true">
                                                        <Setter TargetName="ThumbBorder" Property="Background">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                                    <GradientStop Color="#8996EA" Offset="0"/>
                                                                    <GradientStop Color="#966BA2" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                                
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false"/>
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false"/>
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- ScrollViewer Style with Wide ScrollBar -->
        <Style x:Key="WideScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Grid.Column="0"
                                                    Grid.Row="0"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>
                            
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       Grid.Row="0"
                                       Style="{StaticResource WideScrollBar}"
                                       Orientation="Vertical"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"/>
                            
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Grid.Column="0"
                                       Grid.Row="1"
                                       Style="{StaticResource WideScrollBar}"
                                       Orientation="Horizontal"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Height="20"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern Glassmorphic Header Style -->
        <Style x:Key="SettingsHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,20,0,15"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#667EEA" BlurRadius="8" ShadowDepth="0" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern Section Header with Icons -->
        <Style x:Key="SectionHeaderStyle" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>
        
        <Style x:Key="SectionIconStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Foreground" Value="#667EEA"/>
            <Setter Property="Margin" Value="0,0,15,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#667EEA" BlurRadius="10" ShadowDepth="0" Opacity="0.5"/>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="SectionTitleStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        
        <!-- Modern Text Style -->
        <Style x:Key="SettingsTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#E0E6ED"/>
            <Setter Property="Margin" Value="0,8,0,8"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>
        
        <!-- Touch-Friendly Slider Style -->
        <Style x:Key="SettingsSliderStyle" TargetType="Slider">
            <Setter Property="Margin" Value="0,8,0,20"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <!-- Track for Horizontal Slider -->
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="Slider.DecreaseLarge">
                                        <RepeatButton.Style>
                                            <Style TargetType="RepeatButton">
                                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Focusable" Value="false"/>
                                                <Setter Property="IsTabStop" Value="false"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="RepeatButton">
                                                            <Grid>
                                                                <Border Height="8" 
                                                                        Background="#2D3748"
                                                                        CornerRadius="4,0,0,4"
                                                                        VerticalAlignment="Center"/>
                                                                <Border Height="8"
                                                                        CornerRadius="4,0,0,4"
                                                                        VerticalAlignment="Center">
                                                                    <Border.Background>
                                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                            <GradientStop Color="#667EEA" Offset="0"/>
                                                                            <GradientStop Color="#764BA2" Offset="1"/>
                                                                        </LinearGradientBrush>
                                                                    </Border.Background>
                                                                    <Border.Effect>
                                                                        <DropShadowEffect Color="#667EEA" BlurRadius="8" ShadowDepth="0" Opacity="0.6"/>
                                                                    </Border.Effect>
                                                                </Border>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                                
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="Slider.IncreaseLarge">
                                        <RepeatButton.Style>
                                            <Style TargetType="RepeatButton">
                                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Focusable" Value="false"/>
                                                <Setter Property="IsTabStop" Value="false"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="RepeatButton">
                                                            <Border Height="8"
                                                                    Background="#2D3748"
                                                                    CornerRadius="0,4,4,0"
                                                                    VerticalAlignment="Center">
                                                                <Border.Effect>
                                                                    <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2" Opacity="0.3"/>
                                                                </Border.Effect>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                                
                                <Track.Thumb>
                                    <Thumb x:Name="PART_Thumb"
                                           Width="32"
                                           Height="32"
                                           Focusable="True"
                                           Style="{DynamicResource ModernSliderThumb}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern Slider Thumb -->
        <Style x:Key="ModernSliderThumb" TargetType="Thumb">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse x:Name="ThumbEllipse" 
                                 Fill="White" 
                                 Stroke="#667EEA" 
                                 StrokeThickness="3"
                                 Width="32" 
                                 Height="32"
                                 RenderTransformOrigin="0.5,0.5">
                            <Ellipse.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Ellipse.RenderTransform>
                            <Ellipse.Effect>
                                <DropShadowEffect Color="#667EEA" BlurRadius="12" ShadowDepth="0" Opacity="0.8"/>
                            </Ellipse.Effect>
                        </Ellipse>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ThumbEllipse" Property="Fill" Value="#F7FAFC"/>
                                <Setter TargetName="ThumbEllipse" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#667EEA" BlurRadius="16" ShadowDepth="0" Opacity="1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="ThumbEllipse" Property="Fill" Value="#EDF2F7"/>
                                <Setter TargetName="ThumbEllipse" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern TextBox Style -->
        <Style x:Key="SettingsTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#2D3748" Offset="0"/>
                        <GradientStop Color="#1A202C" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="#4A5568"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Margin" Value="0,8,0,20"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="24"
                                Padding="{TemplateBinding Padding}">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="4" Opacity="0.2"/>
                            </Border.Effect>
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#667EEA"/>
                                <Setter TargetName="Border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#667EEA" BlurRadius="12" ShadowDepth="0" Opacity="0.4"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#667EEA"/>
                                <Setter TargetName="Border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#667EEA" BlurRadius="16" ShadowDepth="0" Opacity="0.6"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern CheckBox Style -->
        <Style x:Key="SettingsCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Margin" Value="0,10,0,20"/>
            <Setter Property="MinHeight" Value="48"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal" Background="Transparent">
                            <Border x:Name="CheckBorder"
                                    Width="32"
                                    Height="32"
                                    CornerRadius="8"
                                    BorderThickness="2"
                                    BorderBrush="#4A5568"
                                    Margin="0,0,16,0"
                                    VerticalAlignment="Center">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#2D3748" Offset="0"/>
                                        <GradientStop Color="#1A202C" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2" Opacity="0.3"/>
                                </Border.Effect>
                                <Path x:Name="CheckMark"
                                      Visibility="Collapsed"
                                      Stroke="White"
                                      StrokeThickness="3"
                                      Data="M8,14 L12,18 L20,10"
                                      Stretch="Uniform"
                                      Margin="6"/>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center"
                                              TextBlock.Foreground="{TemplateBinding Foreground}"
                                              TextBlock.FontSize="{TemplateBinding FontSize}"
                                              TextBlock.FontWeight="{TemplateBinding FontWeight}"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckBorder" Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#667EEA" Offset="0"/>
                                            <GradientStop Color="#764BA2" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="CheckBorder" Property="BorderBrush" Value="#667EEA"/>
                                <Setter TargetName="CheckBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#667EEA" BlurRadius="12" ShadowDepth="0" Opacity="0.6"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBorder" Property="BorderBrush" Value="#667EEA"/>
                                <Setter TargetName="CheckBorder" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#667EEA" BlurRadius="8" ShadowDepth="0" Opacity="0.4"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern Expander Style -->
        <Style x:Key="SettingsExpanderStyle" TargetType="Expander">
            <Setter Property="Background" Value="{StaticResource SurfaceBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource SurfaceTextPrimaryBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource SurfaceBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
            <Setter Property="Padding" Value="15"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="8">
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" 
                                              DockPanel.Dock="Top"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              Foreground="{TemplateBinding Foreground}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              HorizontalAlignment="Stretch"
                                              HorizontalContentAlignment="Left"
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                              Padding="{TemplateBinding Padding}">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Background="{TemplateBinding Background}" 
                                                    Padding="{TemplateBinding Padding}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ContentPresenter Grid.Column="0" 
                                                                      VerticalAlignment="Center"/>
                                                    <TextBlock Grid.Column="1" 
                                                               FontFamily="{StaticResource SegoeMDL2}"
                                                               Text="&#xE70D;" 
                                                               FontSize="14"
                                                               VerticalAlignment="Center"
                                                               Foreground="{StaticResource SurfaceTextSecondaryBrush}"
                                                               RenderTransformOrigin="0.5,0.5">
                                                        <TextBlock.RenderTransform>
                                                            <RotateTransform x:Name="ExpanderRotateTransform" Angle="0"/>
                                                        </TextBlock.RenderTransform>
                                                    </TextBlock>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="ExpanderRotateTransform"
                                                                                 Storyboard.TargetProperty="Angle"
                                                                                 To="180" Duration="0:0:0.2"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetName="ExpanderRotateTransform"
                                                                                 Storyboard.TargetProperty="Angle"
                                                                                 To="0" Duration="0:0:0.2"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                    <ContentPresenter ContentSource="Header"/>
                                </ToggleButton>
                                <ContentPresenter x:Name="ExpandSite"
                                                  DockPanel.Dock="Bottom"
                                                  Visibility="Collapsed"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern ComboBox Style -->
        <Style x:Key="SettingsComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Height" Value="48"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="0,8,0,20"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#2D3748" Offset="0"/>
                        <GradientStop Color="#1A202C" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="#4A5568"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton x:Name="ToggleButton"
                                          Grid.Column="2"
                                          Focusable="False"
                                          ClickMode="Press"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="24">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="4" Opacity="0.2"/>
                                            </Border.Effect>
                                            <Grid>
                                                <ContentPresenter Margin="16,0,40,0" 
                                                                  VerticalAlignment="Center" 
                                                                  HorizontalAlignment="Left"/>
                                                <Path x:Name="Arrow"
                                                      HorizontalAlignment="Right"
                                                      Margin="0,0,16,0"
                                                      VerticalAlignment="Center"
                                                      Data="M0,0 L6,6 L12,0"
                                                      Fill="#667EEA"
                                                      Stroke="#667EEA"
                                                      StrokeThickness="1"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#667EEA"/>
                                                <Setter TargetName="Border" Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect Color="#667EEA" BlurRadius="12" ShadowDepth="0" Opacity="0.4"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="16,0,40,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                            <Popup x:Name="PART_Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Border x:Name="DropDownBorder"
                                        Background="#2D3748"
                                        BorderBrush="#667EEA"
                                        BorderThickness="2"
                                        CornerRadius="12"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        MinWidth="{TemplateBinding ActualWidth}">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" BlurRadius="16" ShadowDepth="8" Opacity="0.4"/>
                                    </Border.Effect>
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern Button Style -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="48"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="24"
                                Padding="{TemplateBinding Padding}"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="4" Opacity="0.3"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder"
                                                             Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                                             To="1.05" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder"
                                                             Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                                             To="1.05" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder"
                                                             Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)"
                                                             To="1.0" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="ButtonBorder"
                                                             Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)"
                                                             To="1.0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                                <Setter TargetName="ButtonBorder" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ButtonBorder" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ButtonBorder" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Glassmorphic Section Border Style -->
        <Style x:Key="GlassSectionStyle" TargetType="Border">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" Opacity="0.1">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="Transparent" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#667EEA" Offset="0" />
                        <GradientStop Color="#764BA2" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="25"/>
            <Setter Property="Padding" Value="30"/>
            <Setter Property="Margin" Value="0,0,0,25"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="8" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Action Button Styles -->
        <Style x:Key="SaveButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#48BB78" Offset="0"/>
                        <GradientStop Color="#38A169" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="32,12"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>

        <Style x:Key="ResetButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#F56565" Offset="0"/>
                        <GradientStop Color="#E53E3E" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="32,12"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>

        <Style x:Key="OpenButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#667EEA" Offset="0"/>
                        <GradientStop Color="#764BA2" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="32,12"/>
            <Setter Property="FontSize" Value="18"/>
        </Style>
    </UserControl.Resources>
    
    <ScrollViewer VerticalScrollBarVisibility="Auto" 
                  HorizontalScrollBarVisibility="Disabled"
                  Padding="40" 
                  Style="{StaticResource WideScrollViewerStyle}"
                  CanContentScroll="False"
                  PanningMode="VerticalOnly"
                  PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
        <StackPanel>
            <!-- Header -->
            <Border Background="{StaticResource SurfacePrimaryBrush}" Padding="20" Margin="0,0,0,20" CornerRadius="10">
                <StackPanel HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBlock FontFamily="{StaticResource SegoeMDL2}" Text="{StaticResource MDL2_Settings}" 
                                   FontSize="32" Foreground="{StaticResource SurfaceTextPrimaryBrush}" 
                                   VerticalAlignment="Center" Margin="0,0,15,0"/>
                        <TextBlock Text="Photobooth Settings" 
                                   FontSize="28" FontWeight="Bold" 
                                   Foreground="{StaticResource SurfaceTextPrimaryBrush}" 
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                    <TextBlock Text="Configure your photobooth experience" 
                               Foreground="{StaticResource SurfaceTextSecondaryBrush}"
                               HorizontalAlignment="Center" 
                               FontSize="14" Margin="0,8,0,0"/>
                </StackPanel>
            </Border>
            
            <!-- Session & Timing Settings -->
            <Expander Header="Session &amp; Timing" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Timer}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
            
                    <!-- Countdown Timer Settings -->
                    <TextBlock Text="Countdown Timer" Style="{StaticResource SectionTitleStyle}" Margin="0,0,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                    
                    <TextBlock Text="Default countdown duration (1-10 seconds)" Style="{StaticResource SettingsTextStyle}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="countdownSlider" 
                                Minimum="1" 
                                Maximum="10" 
                                Value="5" 
                                TickPlacement="BottomRight" 
                                TickFrequency="1" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="CountdownSlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"/>
                        <TextBlock x:Name="countdownValueText" 
                                   Text="5 seconds" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>
                    
                    <CheckBox x:Name="showCountdownCheckBox" 
                              Content="Show countdown in status text (bottom)" 
                              IsChecked="True"
                              Checked="ShowCountdownCheckBox_Changed"
                              Unchecked="ShowCountdownCheckBox_Changed"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              ToolTip="Shows 'Get ready! 3, 2, 1...' text at bottom during countdown. Main countdown overlay still visible."/>
                        </StackPanel>
                    </Border>
                    
                    <!-- Auto Capture Settings -->
                    <TextBlock Text="Capture Timing" Style="{StaticResource SectionTitleStyle}" Margin="0,30,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                    
                    <TextBlock Text="Photo display time (seconds)" Style="{StaticResource SettingsTextStyle}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="photoDisplayDurationSlider" 
                                Minimum="1" 
                                Maximum="10" 
                                Value="4" 
                                TickPlacement="BottomRight" 
                                TickFrequency="1" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="PhotoDisplayDurationSlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"/>
                        <TextBlock x:Name="photoDisplayDurationValueText" 
                                   Text="4 seconds" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>
                    
                    <TextBlock Text="Delay between photos (for multi-photo sessions):" 
                               Style="{StaticResource SettingsTextStyle}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="delayBetweenPhotosSlider" 
                                Minimum="1" 
                                Maximum="10" 
                                Value="3" 
                                TickPlacement="BottomRight" 
                                TickFrequency="1" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="DelayBetweenPhotosSlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"/>
                        <TextBlock x:Name="delayBetweenPhotosValueText" 
                                   Text="3 seconds" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>
                    
                    <CheckBox x:Name="photographerModeCheckBox" 
                              Content="Enable Photographer Mode (manual trigger for each photo)" 
                              IsChecked="False"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              ToolTip="When enabled, each photo requires manual camera trigger instead of automatic progression"/>
                    
                    <CheckBox x:Name="showSessionPromptsCheckBox" 
                              Content="Show Session Status Messages" 
                              IsChecked="False"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              ToolTip="When enabled, shows status messages like 'Touch START to begin', 'Taking photo...', etc."/>
                        </StackPanel>
                    </Border>
                    
                    <!-- Session Clear Settings -->
                    <TextBlock Text="Session Auto-Clear" Style="{StaticResource SectionTitleStyle}" Margin="0,30,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                    
                    <CheckBox x:Name="autoClearSessionCheckBox" 
                              Content="Auto-clear session after completion" 
                              IsChecked="True"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              ToolTip="Automatically clear the screen after session completes"/>
                    
                    <TextBlock Text="Auto-clear timeout (seconds)" Style="{StaticResource SettingsTextStyle}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="autoClearTimeoutSlider" 
                                Minimum="10" 
                                Maximum="120" 
                                Value="30" 
                                TickPlacement="BottomRight" 
                                TickFrequency="10" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="AutoClearTimeoutSlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"/>
                        <TextBlock x:Name="autoClearTimeoutValueText" 
                                   Text="30 seconds" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>
                        </StackPanel>
                    </Border>
                    
                    <!-- Retake Settings -->
                    <TextBlock Text="Photo Retake Options" Style="{StaticResource SectionTitleStyle}" Margin="0,30,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                    
                    <CheckBox x:Name="enableRetakeCheckBox" 
                              Content="Enable photo retake option after capture" 
                              IsChecked="False"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              ToolTip="When enabled, users can review and retake individual photos before finalizing the session"/>
                    
                    <TextBlock Text="Retake review timeout (seconds)" Style="{StaticResource SettingsTextStyle}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="retakeTimeoutSlider" 
                                Minimum="5" 
                                Maximum="30" 
                                Value="15" 
                                TickPlacement="BottomRight" 
                                TickFrequency="5" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="RetakeTimeoutSlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"
                                IsEnabled="{Binding IsChecked, ElementName=enableRetakeCheckBox}"/>
                        <TextBlock x:Name="retakeTimeoutValueText" 
                                   Text="15 seconds" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>
                    
                    <CheckBox x:Name="allowMultipleRetakesCheckBox" 
                              Content="Allow multiple retakes of the same photo" 
                              IsChecked="True"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              IsEnabled="{Binding IsChecked, ElementName=enableRetakeCheckBox}"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Expander>
            
            <!-- File & Storage Settings -->
            <Expander Header="File &amp; Storage" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Save}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
            
                    <!-- Photo Storage Settings -->
                    <TextBlock Text="Photo Storage" Style="{StaticResource SectionTitleStyle}" Margin="0,0,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                    
                    <TextBlock Text="Photos save location:" Style="{StaticResource SettingsTextStyle}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <TextBox x:Name="photoLocationTextBox" 
                                 Text="C:\Users\...\Pictures\Photobooth" 
                                 Width="450"
                                 Style="{StaticResource SettingsTextBoxStyle}"/>
                        <Button Content="Browse" 
                                Click="BrowsePhotoLocation_Click"
                                Margin="15,0,0,0" 
                                Padding="20,12"
                                Style="{StaticResource ModernButtonStyle}">
                            <Button.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#48BB78" Offset="0"/>
                                    <GradientStop Color="#38A169" Offset="1"/>
                                </LinearGradientBrush>
                            </Button.Background>
                        </Button>
                    </StackPanel>
                    
                    <TextBlock Text="Photo filename format:" Style="{StaticResource SettingsTextStyle}"/>
                    <ComboBox x:Name="filenameFormatComboBox" 
                              Style="{StaticResource SettingsComboBoxStyle}"
                              Width="450"
                              HorizontalAlignment="Left">
                        <ComboBoxItem Content="Photobooth_YYYYMMDD_HHMMSS" IsSelected="True"/>
                        <ComboBoxItem Content="Photo_YYYYMMDD_HHMMSS"/>
                        <ComboBoxItem Content="IMG_YYYYMMDD_HHMMSS"/>
                        <ComboBoxItem Content="Booth_Counter"/>
                    </ComboBox>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Expander>
            
            <!-- Camera & Live View Settings -->
            <Expander Header="Camera &amp; Live View" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_View}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
            
                    <!-- Live View Settings -->
            <Border Style="{StaticResource GlassSectionStyle}">
                <StackPanel>
                    <StackPanel Style="{StaticResource SectionHeaderStyle}">
                        <TextBlock Text="{StaticResource MDL2_View}" FontFamily="{StaticResource SegoeMDL2}" Style="{StaticResource SectionIconStyle}"/>
                        <TextBlock Text="Live View Settings" Style="{StaticResource SectionTitleStyle}"/>
                    </StackPanel>
                    
                    <CheckBox x:Name="mirrorLiveViewCheckBox" 
                              Content="Mirror live view (for front-facing setup)" 
                              Style="{StaticResource SettingsCheckBoxStyle}"/>
                    
                    <CheckBox x:Name="enableIdleLiveViewCheckBox" 
                              Content="Enable live view when idle (not in session)" 
                              Style="{StaticResource SettingsCheckBoxStyle}"/>
                    
                    <TextBlock Text="Live view frame rate (FPS)" Style="{StaticResource SettingsTextStyle}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="frameRateSlider" 
                                Minimum="15" 
                                Maximum="30" 
                                Value="{Binding Source={x:Static properties:Settings.Default}, Path=LiveViewFrameRate, Mode=TwoWay}" 
                                TickPlacement="BottomRight" 
                                TickFrequency="5" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="FrameRateSlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"/>
                        <TextBlock x:Name="frameRateValueText" 
                                   Text="30 FPS" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>

                    <!-- Auto Focus Settings -->
                    <Separator Margin="0,10,0,20" Background="#555"/>

                    <CheckBox x:Name="enableAutoFocusCheckBox"
                              Content="Enable Auto Focus before capture"
                              IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=EnableAutoFocus, Mode=TwoWay}"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              ToolTip="Automatically focus the camera before taking a photo"/>

                    <TextBlock Text="Auto Focus delay (milliseconds)"
                               Style="{StaticResource SettingsTextStyle}"
                               IsEnabled="{Binding IsChecked, ElementName=enableAutoFocusCheckBox}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="autoFocusDelaySlider"
                                Minimum="0"
                                Maximum="500"
                                Value="{Binding Source={x:Static properties:Settings.Default}, Path=AutoFocusDelay, Mode=TwoWay}"
                                TickPlacement="BottomRight"
                                TickFrequency="50"
                                IsSnapToTickEnabled="True"
                                Width="300"
                                IsEnabled="{Binding IsChecked, ElementName=enableAutoFocusCheckBox}"
                                ValueChanged="AutoFocusDelaySlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"/>
                        <TextBlock x:Name="autoFocusDelayValueText"
                                   Text="100 ms"
                                   VerticalAlignment="Center"
                                   Margin="20,0,0,0"
                                   Foreground="White"
                                   FontWeight="Bold"
                                   FontSize="18"
                                   IsEnabled="{Binding IsChecked, ElementName=enableAutoFocusCheckBox}"/>
                    </StackPanel>
                </StackPanel>
            </Border>
                </StackPanel>
            </Expander>

            <!-- Video & Boomerang Modules -->
            <Expander Header="Video &amp; Boomerang Modules" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Video}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Video Recording Settings -->
                    <TextBlock Text="Video Recording" Style="{StaticResource SectionTitleStyle}" Margin="0,0,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                            <CheckBox x:Name="enableVideoModuleCheckBox" 
                                      Content="Enable Video Recording Module" 
                                      IsChecked="False"
                                      Style="{StaticResource SettingsCheckBoxStyle}"
                                      ToolTip="Enable video recording capability in the photobooth"
                                      Checked="EnableVideoModule_Changed"
                                      Unchecked="EnableVideoModule_Changed"/>
                            
                            <CheckBox x:Name="showVideoButtonCheckBox" 
                                      Content="Show Video Recording Button" 
                                      IsChecked="True"
                                      Style="{StaticResource SettingsCheckBoxStyle}"
                                      IsEnabled="{Binding IsChecked, ElementName=enableVideoModuleCheckBox}"
                                      ToolTip="Show/hide the video recording button in the interface"
                                      Checked="ShowVideoButton_Changed"
                                      Unchecked="ShowVideoButton_Changed"/>
                            
                            <TextBlock Text="Maximum video duration (seconds)" Style="{StaticResource SettingsTextStyle}"/>
                            <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                                <Slider x:Name="videoDurationSlider" 
                                        Minimum="5" 
                                        Maximum="300" 
                                        Value="30" 
                                        TickPlacement="BottomRight" 
                                        TickFrequency="10" 
                                        IsSnapToTickEnabled="True"
                                        Width="300"
                                        ValueChanged="VideoDurationSlider_ValueChanged"
                                        Style="{StaticResource SettingsSliderStyle}"
                                        IsEnabled="{Binding IsChecked, ElementName=enableVideoModuleCheckBox}"/>
                                <TextBlock x:Name="videoDurationValueText" 
                                           Text="30 seconds" 
                                           VerticalAlignment="Center" 
                                           Margin="20,0,0,0" 
                                           Foreground="White" 
                                           FontWeight="Bold"
                                           FontSize="18"/>
                            </StackPanel>
                            
                            <!-- Video Compression Settings -->
                            <Separator Background="#44FFFFFF" Height="1" Margin="0,15,0,15"/>
                            
                            <CheckBox x:Name="enableVideoCompressionCheckBox" 
                                      Content="Enable Video Compression (for cloud upload)" 
                                      IsChecked="True"
                                      Style="{StaticResource SettingsCheckBoxStyle}"
                                      IsEnabled="{Binding IsChecked, ElementName=enableVideoModuleCheckBox}"
                                      ToolTip="Compress videos before uploading to reduce file size and upload time"
                                      Checked="EnableVideoCompression_Changed"
                                      Unchecked="EnableVideoCompression_Changed"/>
                            
                            <TextBlock Text="Video compression quality" 
                                       Style="{StaticResource SettingsTextStyle}"
                                       IsEnabled="{Binding IsChecked, ElementName=enableVideoCompressionCheckBox}"/>
                            <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                                <ComboBox x:Name="videoCompressionQualityComboBox" 
                                          Width="200"
                                          Style="{StaticResource SettingsComboBoxStyle}"
                                          IsEnabled="{Binding IsChecked, ElementName=enableVideoCompressionCheckBox}"
                                          SelectionChanged="VideoCompressionQuality_Changed">
                                    <ComboBoxItem Content="Low (smallest file)" Tag="low"/>
                                    <ComboBoxItem Content="Medium (balanced)" Tag="medium" IsSelected="True"/>
                                    <ComboBoxItem Content="High (better quality)" Tag="high"/>
                                    <ComboBoxItem Content="Very High (best quality)" Tag="veryhigh"/>
                                </ComboBox>
                                <TextBlock Text="Estimated size reduction: 60-80%" 
                                           x:Name="compressionEstimateText"
                                           VerticalAlignment="Center" 
                                           Margin="20,0,0,0" 
                                           Foreground="#AAD4E7" 
                                           FontStyle="Italic"/>
                            </StackPanel>
                            
                            <TextBlock Text="Video resolution (for upload)" 
                                       Style="{StaticResource SettingsTextStyle}"
                                       IsEnabled="{Binding IsChecked, ElementName=enableVideoCompressionCheckBox}"/>
                            <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                                <ComboBox x:Name="videoUploadResolutionComboBox" 
                                          Width="200"
                                          Style="{StaticResource SettingsComboBoxStyle}"
                                          IsEnabled="{Binding IsChecked, ElementName=enableVideoCompressionCheckBox}"
                                          SelectionChanged="VideoUploadResolution_Changed">
                                    <ComboBoxItem Content="Original" Tag="original"/>
                                    <ComboBoxItem Content="1080p (1920x1080)" Tag="1080p" IsSelected="True"/>
                                    <ComboBoxItem Content="720p (1280x720)" Tag="720p"/>
                                    <ComboBoxItem Content="480p (854x480)" Tag="480p"/>
                                </ComboBox>
                                <TextBlock Text="Lower resolution = faster upload" 
                                           VerticalAlignment="Center" 
                                           Margin="20,0,0,0" 
                                           Foreground="#AAD4E7" 
                                           FontStyle="Italic"/>
                            </StackPanel>
                            
                            <!-- Advanced Video Settings -->
                            <Separator Background="#44FFFFFF" Height="1" Margin="0,15,0,15"/>
                            <TextBlock Text="Advanced Video Settings" Style="{StaticResource SettingsTextStyle}" FontWeight="SemiBold"/>
                            
                            <CheckBox x:Name="videoModeLiveViewEnabledCheckBox" 
                                      Content="Enable live view during video recording" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=VideoModeLiveViewEnabled, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"
                                      IsEnabled="{Binding IsChecked, ElementName=enableVideoModuleCheckBox}"/>
                            
                            <Grid Margin="0,10,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- ISO -->
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="ISO:" Style="{StaticResource SettingsTextStyle}" FontSize="13"/>
                                <ComboBox Grid.Column="1" Grid.Row="0" x:Name="videoISOComboBox" 
                                          Margin="5,5,5,5"
                                          Style="{StaticResource SettingsComboBoxStyle}"
                                          IsEnabled="{Binding IsChecked, ElementName=enableVideoModuleCheckBox}"
                                          SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=VideoISO, Mode=TwoWay}">
                                    <ComboBoxItem Content="Auto" Tag="Auto"/>
                                    <ComboBoxItem Content="100" Tag="100"/>
                                    <ComboBoxItem Content="200" Tag="200"/>
                                    <ComboBoxItem Content="400" Tag="400"/>
                                    <ComboBoxItem Content="800" Tag="800"/>
                                    <ComboBoxItem Content="1600" Tag="1600"/>
                                </ComboBox>
                                
                                <!-- Aperture -->
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Aperture:" Style="{StaticResource SettingsTextStyle}" FontSize="13"/>
                                <ComboBox Grid.Column="1" Grid.Row="1" x:Name="videoApertureComboBox" 
                                          Margin="5,5,5,5"
                                          Style="{StaticResource SettingsComboBoxStyle}"
                                          IsEnabled="{Binding IsChecked, ElementName=enableVideoModuleCheckBox}"
                                          SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=VideoAperture, Mode=TwoWay}">
                                    <ComboBoxItem Content="Auto" Tag="Auto"/>
                                    <ComboBoxItem Content="f/1.8" Tag="1.8"/>
                                    <ComboBoxItem Content="f/2.8" Tag="2.8"/>
                                    <ComboBoxItem Content="f/4.0" Tag="4.0"/>
                                    <ComboBoxItem Content="f/5.6" Tag="5.6"/>
                                    <ComboBoxItem Content="f/8.0" Tag="8.0"/>
                                </ComboBox>
                                
                                <!-- Shutter Speed -->
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="Shutter Speed:" Style="{StaticResource SettingsTextStyle}" FontSize="13"/>
                                <ComboBox Grid.Column="1" Grid.Row="2" x:Name="videoShutterSpeedComboBox" 
                                          Margin="5,5,5,5"
                                          Style="{StaticResource SettingsComboBoxStyle}"
                                          IsEnabled="{Binding IsChecked, ElementName=enableVideoModuleCheckBox}"
                                          SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=VideoShutterSpeed, Mode=TwoWay}">
                                    <ComboBoxItem Content="Auto" Tag="Auto"/>
                                    <ComboBoxItem Content="1/30" Tag="1/30"/>
                                    <ComboBoxItem Content="1/60" Tag="1/60"/>
                                    <ComboBoxItem Content="1/125" Tag="1/125"/>
                                    <ComboBoxItem Content="1/250" Tag="1/250"/>
                                    <ComboBoxItem Content="1/500" Tag="1/500"/>
                                </ComboBox>
                                
                                <!-- Frame Rate -->
                                <TextBlock Grid.Column="0" Grid.Row="3" Text="Frame Rate:" Style="{StaticResource SettingsTextStyle}" FontSize="13"/>
                                <ComboBox Grid.Column="1" Grid.Row="3" x:Name="videoFrameRateComboBox" 
                                          Margin="5,5,5,5"
                                          Style="{StaticResource SettingsComboBoxStyle}"
                                          IsEnabled="{Binding IsChecked, ElementName=enableVideoModuleCheckBox}"
                                          SelectedValue="{Binding Source={x:Static properties:Settings.Default}, Path=VideoFrameRate, Mode=TwoWay}">
                                    <ComboBoxItem Content="24 fps" Tag="24"/>
                                    <ComboBoxItem Content="30 fps" Tag="30"/>
                                    <ComboBoxItem Content="60 fps" Tag="60"/>
                                </ComboBox>
                            </Grid>
                        </StackPanel>
                    </Border>
                    
                    <!-- Boomerang Settings -->
                    <TextBlock Text="Boomerang" Style="{StaticResource SectionTitleStyle}" Margin="0,30,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                            <CheckBox x:Name="enableBoomerangModuleCheckBox" 
                                      Content="Enable Boomerang Module" 
                                      IsChecked="False"
                                      Style="{StaticResource SettingsCheckBoxStyle}"
                                      ToolTip="Enable boomerang creation capability in the photobooth"
                                      Checked="EnableBoomerangModule_Changed"
                                      Unchecked="EnableBoomerangModule_Changed"/>
                            
                            <CheckBox x:Name="showBoomerangButtonCheckBox" 
                                      Content="Show Boomerang Button" 
                                      IsChecked="True"
                                      Style="{StaticResource SettingsCheckBoxStyle}"
                                      IsEnabled="{Binding IsChecked, ElementName=enableBoomerangModuleCheckBox}"
                                      ToolTip="Show/hide the boomerang button in the interface"
                                      Checked="ShowBoomerangButton_Changed"
                                      Unchecked="ShowBoomerangButton_Changed"/>
                            
                            <TextBlock Text="Number of frames to capture" Style="{StaticResource SettingsTextStyle}"/>
                            <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                                <Slider x:Name="boomerangFramesSlider" 
                                        Minimum="5" 
                                        Maximum="20" 
                                        Value="10" 
                                        TickPlacement="BottomRight" 
                                        TickFrequency="5" 
                                        IsSnapToTickEnabled="True"
                                        Width="300"
                                        ValueChanged="BoomerangFramesSlider_ValueChanged"
                                        Style="{StaticResource SettingsSliderStyle}"
                                        IsEnabled="{Binding IsChecked, ElementName=enableBoomerangModuleCheckBox}"/>
                                <TextBlock x:Name="boomerangFramesValueText" 
                                           Text="10 frames" 
                                           VerticalAlignment="Center" 
                                           Margin="20,0,0,0" 
                                           Foreground="White" 
                                           FontWeight="Bold"
                                           FontSize="18"/>
                            </StackPanel>
                            
                            <TextBlock Text="Frame capture speed (milliseconds)" Style="{StaticResource SettingsTextStyle}"/>
                            <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                                <Slider x:Name="boomerangSpeedSlider" 
                                        Minimum="50" 
                                        Maximum="500" 
                                        Value="100" 
                                        TickPlacement="BottomRight" 
                                        TickFrequency="50" 
                                        IsSnapToTickEnabled="True"
                                        Width="300"
                                        ValueChanged="BoomerangSpeedSlider_ValueChanged"
                                        Style="{StaticResource SettingsSliderStyle}"
                                        IsEnabled="{Binding IsChecked, ElementName=enableBoomerangModuleCheckBox}"/>
                                <TextBlock x:Name="boomerangSpeedValueText" 
                                           Text="100 ms" 
                                           VerticalAlignment="Center" 
                                           Margin="20,0,0,0" 
                                           Foreground="White" 
                                           FontWeight="Bold"
                                           FontSize="18"/>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    
                    <!-- Flipbook Module Settings -->
                    <TextBlock Text="Flipbook Module" Style="{StaticResource SectionTitleStyle}" Margin="0,25,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                            <CheckBox x:Name="enableFlipbookModuleCheckBox" 
                                      Content="Enable Flipbook Module" 
                                      Style="{StaticResource SettingsCheckBoxStyle}"
                                      ToolTip="Enable flipbook creation capability in the photobooth"
                                      Checked="EnableFlipbookModule_Changed"
                                      Unchecked="EnableFlipbookModule_Changed"/>
                            
                            <CheckBox x:Name="showFlipbookButtonCheckBox" 
                                      Content="Show Flipbook Button" 
                                      Style="{StaticResource SettingsCheckBoxStyle}"
                                      IsEnabled="{Binding IsChecked, ElementName=enableFlipbookModuleCheckBox}"
                                      ToolTip="Show/hide the flipbook button in the interface"
                                      Checked="ShowFlipbookButton_Changed"
                                      Unchecked="ShowFlipbookButton_Changed"/>
                            
                            <StackPanel Orientation="Horizontal" Margin="0,20,0,10">
                                <TextBlock Text="Recording Duration:" 
                                           Style="{StaticResource SettingsTextStyle}"
                                           IsEnabled="{Binding IsChecked, ElementName=enableFlipbookModuleCheckBox}"/>
                                <Slider x:Name="flipbookDurationSlider" 
                                        Minimum="3" 
                                        Maximum="10" 
                                        Value="4"
                                        TickPlacement="BottomRight"
                                        TickFrequency="1"
                                        IsSnapToTickEnabled="True"
                                        Width="250"
                                        Margin="20,0,0,0"
                                        ValueChanged="FlipbookDurationSlider_ValueChanged"
                                        Style="{StaticResource SettingsSliderStyle}"
                                        IsEnabled="{Binding IsChecked, ElementName=enableFlipbookModuleCheckBox}"/>
                                <TextBlock x:Name="flipbookDurationValueText" 
                                           Text="4 seconds" 
                                           VerticalAlignment="Center" 
                                           Margin="20,0,0,0" 
                                           Foreground="White" 
                                           FontWeight="Bold"
                                           FontSize="18"/>
                            </StackPanel>
                            
                            <TextBlock Text="Note: Flipbook uses the same camera settings as Video Recording" 
                                       Style="{StaticResource SettingsTextStyle}"
                                       FontStyle="Italic"
                                       Opacity="0.8"
                                       Margin="0,10,0,0"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Expander>
            
            <!-- Effects & Filters Settings -->
            <Expander Header="Effects &amp; Filters" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Color}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Beauty Mode Settings -->
                    <TextBlock Text="✨ Beauty Mode (Global Enhancement)" Style="{StaticResource SectionTitleStyle}" Margin="0,0,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}" Margin="0,0,0,20">
                        <StackPanel>
                            <CheckBox x:Name="beautyModeEnabledCheckBox" 
                                      Content="Enable Beauty Mode for all photos" 
                                      IsChecked="False"
                                      Style="{StaticResource SettingsCheckBoxStyle}"
                                      ToolTip="Applies skin smoothing and enhancement to all captured photos"/>
                            
                            <TextBlock Text="Beauty intensity:" 
                                       Style="{StaticResource SettingsTextStyle}"
                                       Margin="0,15,0,5"
                                       IsEnabled="{Binding IsChecked, ElementName=beautyModeEnabledCheckBox}"/>
                            <Grid IsEnabled="{Binding IsChecked, ElementName=beautyModeEnabledCheckBox}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="60"/>
                                </Grid.ColumnDefinitions>
                                <Slider x:Name="beautyModeIntensitySlider" 
                                        Grid.Column="0"
                                        Minimum="0" 
                                        Maximum="100" 
                                        Value="50"
                                        TickFrequency="10"
                                        TickPlacement="BottomRight"
                                        ValueChanged="BeautyModeIntensitySlider_ValueChanged"/>
                                <TextBlock x:Name="beautyModeIntensityText" 
                                           Grid.Column="1"
                                           Text="50%"
                                           Style="{StaticResource SettingsTextStyle}"
                                           HorizontalAlignment="Right"
                                           Margin="10,0,0,0"/>
                            </Grid>
                            
                            <TextBlock Text="💡 Beauty Mode applies soft skin smoothing, subtle glow, and enhancement to all photos" 
                                       Style="{StaticResource SettingsTextStyle}"
                                       FontSize="12"
                                       Opacity="0.8"
                                       TextWrapping="Wrap"
                                       Margin="0,10,0,0"/>
                        </StackPanel>
                    </Border>
                    
                    <!-- Photo Filters Settings -->
                    <TextBlock Text="Photo Filters" Style="{StaticResource SectionTitleStyle}" Margin="0,0,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                    
                    <CheckBox x:Name="enableFiltersCheckBox" 
                              Content="Enable photo filters" 
                              IsChecked="True"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              ToolTip="Allow users to apply filters to their photos"/>
                    
                    <TextBlock Text="Default filter:" Style="{StaticResource SettingsTextStyle}"
                               IsEnabled="{Binding IsChecked, ElementName=enableFiltersCheckBox}"/>
                    <ComboBox x:Name="defaultFilterComboBox" 
                              Style="{StaticResource SettingsComboBoxStyle}"
                              Width="300"
                              HorizontalAlignment="Left"
                              IsEnabled="{Binding IsChecked, ElementName=enableFiltersCheckBox}">
                        <ComboBoxItem Content="None" IsSelected="True"/>
                        <ComboBoxItem Content="Black &amp; White"/>
                        <ComboBoxItem Content="Sepia"/>
                        <ComboBoxItem Content="Vintage"/>
                        <ComboBoxItem Content="Glamour"/>
                        <ComboBoxItem Content="Cool"/>
                        <ComboBoxItem Content="Warm"/>
                        <ComboBoxItem Content="High Contrast"/>
                        <ComboBoxItem Content="Vivid"/>
                    </ComboBox>
                    
                    <TextBlock Text="Filter intensity:" Style="{StaticResource SettingsTextStyle}"
                               IsEnabled="{Binding IsChecked, ElementName=enableFiltersCheckBox}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="filterIntensitySlider" 
                                Minimum="0" 
                                Maximum="100" 
                                Value="100" 
                                TickPlacement="BottomRight" 
                                TickFrequency="25" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="FilterIntensitySlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"
                                IsEnabled="{Binding IsChecked, ElementName=enableFiltersCheckBox}"/>
                        <TextBlock x:Name="filterIntensityValueText" 
                                   Text="100%" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>
                    
                    <CheckBox x:Name="allowFilterChangeCheckBox" 
                              Content="Allow users to change filters during session" 
                              IsChecked="True"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              IsEnabled="{Binding IsChecked, ElementName=enableFiltersCheckBox}"/>
                    
                    <CheckBox x:Name="showFilterPreviewCheckBox" 
                              Content="Show live filter preview" 
                              IsChecked="True"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              IsEnabled="{Binding IsChecked, ElementName=enableFiltersCheckBox}"/>
                    
                    <CheckBox x:Name="autoApplyFilterCheckBox" 
                              Content="Auto-apply filters (single filter = apply automatically, multiple = random selection)" 
                              IsChecked="False"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              IsEnabled="{Binding IsChecked, ElementName=enableFiltersCheckBox}"/>
                    
                    <!-- Individual Filter Selection -->
                    <Border Background="Transparent" 
                            BorderBrush="#4A5568" 
                            BorderThickness="1" 
                            CornerRadius="15" 
                            Padding="20" 
                            Margin="0,20,0,20">
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="8" ShadowDepth="4" Opacity="0.2"/>
                        </Border.Effect>
                        <StackPanel IsEnabled="{Binding IsChecked, ElementName=enableFiltersCheckBox}">
                            <TextBlock Text="Available Filters:" 
                                       Style="{StaticResource SettingsTextStyle}"
                                       FontWeight="Bold"
                                       FontSize="18"
                                       Margin="0,0,0,15"/>
                            
                            <Border Background="#2D3748" 
                                    CornerRadius="12" 
                                    Padding="15" 
                                    Margin="0,0,0,15"
                                    MaxHeight="300">
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="4" ShadowDepth="2" Opacity="0.3"/>
                                </Border.Effect>
                                <ScrollViewer VerticalScrollBarVisibility="Auto" 
                                              MaxHeight="200"
                                              PreviewMouseWheel="InnerScrollViewer_PreviewMouseWheel">
                                    <StackPanel x:Name="filterListPanel">
                                        <!-- Filter checkboxes with reduced margins for compact display -->
                                        <CheckBox x:Name="filterBlackWhiteCheckBox" 
                                                  Content="Black &amp; White" 
                                                  IsChecked="True"
                                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                                  Margin="8,5"/>
                                        <CheckBox x:Name="filterSepiaCheckBox" 
                                                  Content="🟤 Sepia" 
                                                  IsChecked="True"
                                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                                  Margin="8,5"/>
                                        <CheckBox x:Name="filterVintageCheckBox" 
                                                  Content="📸 Vintage" 
                                                  IsChecked="True"
                                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                                  Margin="8,5"/>
                                        <CheckBox x:Name="filterGlamourCheckBox" 
                                                  Content="Glamour" 
                                                  IsChecked="True"
                                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                                  Margin="8,5"/>
                                        <CheckBox x:Name="filterCoolCheckBox" 
                                                  Content="🧊 Cool" 
                                                  IsChecked="True"
                                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                                  Margin="8,5"/>
                                        <CheckBox x:Name="filterWarmCheckBox" 
                                                  Content="Warm" 
                                                  IsChecked="True"
                                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                                  Margin="8,5"/>
                                        <CheckBox x:Name="filterHighContrastCheckBox" 
                                                  Content="⚡ High Contrast" 
                                                  IsChecked="True"
                                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                                  Margin="8,5"/>
                                        <CheckBox x:Name="filterVividCheckBox" 
                                                  Content="🌈 Vivid" 
                                                  IsChecked="True"
                                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                                  Margin="8,5"/>
                                    </StackPanel>
                                </ScrollViewer>
                            </Border>
                            
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button Content="✅ Select All" 
                                        Width="140"
                                        Margin="0,0,15,0"
                                        Click="SelectAllFilters_Click"
                                        Style="{StaticResource ModernButtonStyle}">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#48BB78" Offset="0"/>
                                            <GradientStop Color="#38A169" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>
                                <Button Content="❌ Deselect All" 
                                        Width="140"
                                        Click="DeselectAllFilters_Click"
                                        Style="{StaticResource ModernButtonStyle}">
                                    <Button.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                            <GradientStop Color="#F56565" Offset="0"/>
                                            <GradientStop Color="#E53E3E" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                        </StackPanel>
                    </Border>
                    
                    <!-- GIF Animation Settings -->
                    <TextBlock Text="GIF Animation Settings" Style="{StaticResource SectionTitleStyle}" Margin="0,30,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                    
                    <CheckBox x:Name="enableGifGenerationCheckBox"
                              Content="Enable GIF generation for multi-photo sessions"
                              IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=EnableGifGeneration, Mode=TwoWay}"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              Checked="EnableGifGeneration_Changed"
                              Unchecked="EnableGifGeneration_Changed"
                              ToolTip="Automatically create animated GIFs when multiple photos are taken"/>
                    
                    <TextBlock Text="Frame delay (seconds between photos):" 
                               Style="{StaticResource SettingsTextStyle}"
                               IsEnabled="{Binding IsChecked, ElementName=enableGifGenerationCheckBox}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="gifFrameDelaySlider"
                                Minimum="0.5"
                                Maximum="5"
                                Value="1.5"
                                TickPlacement="BottomRight"
                                TickFrequency="0.5"
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="GifFrameDelaySlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"
                                IsEnabled="{Binding IsChecked, ElementName=enableGifGenerationCheckBox}"/>
                        <TextBlock x:Name="gifFrameDelayValueText" 
                                   Text="1.5 seconds" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>
                    
                    <CheckBox x:Name="enableGifOverlayCheckBox" 
                              Content="Add overlay to GIF animations" 
                              IsChecked="False"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              Checked="EnableGifOverlay_Changed"
                              Unchecked="EnableGifOverlay_Changed"
                              IsEnabled="{Binding IsChecked, ElementName=enableGifGenerationCheckBox}"
                              ToolTip="Add a custom overlay image to the animated GIFs"/>
                    
                    <TextBlock Text="Overlay image file:" 
                               Style="{StaticResource SettingsTextStyle}"
                               Visibility="{Binding IsChecked, ElementName=enableGifOverlayCheckBox, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20"
                                Visibility="{Binding IsChecked, ElementName=enableGifOverlayCheckBox, Converter={StaticResource BoolToVisibilityConverter}}">
                        <TextBox x:Name="gifOverlayPathTextBox" 
                                 Width="400"
                                 Height="48"
                                 Padding="15,0"
                                 VerticalContentAlignment="Center"
                                 Background="#2D3748"
                                 Foreground="White"
                                 BorderBrush="#667EEA"
                                 BorderThickness="2"
                                 FontSize="14"
                                 Text=""
                                 TextChanged="GifOverlayPath_TextChanged"
                                 IsEnabled="{Binding IsChecked, ElementName=enableGifOverlayCheckBox}">
                            <TextBox.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="8"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>
                        <Button Content="📁 Browse" 
                                Width="120"
                                Height="48"
                                Margin="15,0,0,0"
                                Click="BrowseGifOverlay_Click"
                                Style="{StaticResource ModernButtonStyle}"
                                IsEnabled="{Binding IsChecked, ElementName=enableGifOverlayCheckBox}">
                            <Button.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#667EEA" Offset="0"/>
                                    <GradientStop Color="#764BA2" Offset="1"/>
                                </LinearGradientBrush>
                            </Button.Background>
                        </Button>
                    </StackPanel>
                    
                    <TextBlock Text="GIF output quality:" 
                               Style="{StaticResource SettingsTextStyle}"
                               IsEnabled="{Binding IsChecked, ElementName=enableGifGenerationCheckBox}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="gifQualitySlider" 
                                Minimum="50" 
                                Maximum="100" 
                                Value="{Binding Source={x:Static properties:Settings.Default}, Path=GifQuality, Mode=TwoWay}" 
                                TickPlacement="BottomRight" 
                                TickFrequency="10" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="GifQualitySlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"
                                IsEnabled="{Binding IsChecked, ElementName=enableGifGenerationCheckBox}"/>
                        <TextBlock x:Name="gifQualityValueText" 
                                   Text="75%" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>
                    
                    <TextBlock Text="Maximum GIF dimensions:" 
                               Style="{StaticResource SettingsTextStyle}"
                               IsEnabled="{Binding IsChecked, ElementName=enableGifGenerationCheckBox}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <TextBox x:Name="gifMaxWidthTextBox" 
                                 Width="100"
                                 Height="48"
                                 Padding="10,0"
                                 VerticalContentAlignment="Center"
                                 Background="#2D3748"
                                 Foreground="White"
                                 BorderBrush="#667EEA"
                                 BorderThickness="2"
                                 FontSize="16"
                                 Text="1920"
                                 TextChanged="GifMaxWidth_TextChanged"
                                 IsEnabled="{Binding IsChecked, ElementName=enableGifGenerationCheckBox}">
                            <TextBox.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="8"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>
                        <TextBlock Text=" x " 
                                   VerticalAlignment="Center" 
                                   Margin="10,0" 
                                   Foreground="White" 
                                   FontSize="16"/>
                        <TextBox x:Name="gifMaxHeightTextBox" 
                                 Width="100"
                                 Height="48"
                                 Padding="10,0"
                                 VerticalContentAlignment="Center"
                                 Background="#2D3748"
                                 Foreground="White"
                                 BorderBrush="#667EEA"
                                 BorderThickness="2"
                                 FontSize="16"
                                 Text="1080"
                                 TextChanged="GifMaxHeight_TextChanged"
                                 IsEnabled="{Binding IsChecked, ElementName=enableGifGenerationCheckBox}">
                            <TextBox.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="8"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>
                        <TextBlock Text=" pixels" 
                                   VerticalAlignment="Center" 
                                   Margin="10,0,0,0" 
                                   Foreground="#8A8BA3" 
                                   FontSize="14"/>
                    </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Expander>
            
            <!-- Print Settings -->
            <Expander Header="Print Settings" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Print}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Basic Print Settings -->
                    <TextBlock Text="Basic Print Settings" Style="{StaticResource SectionTitleStyle}" Margin="0,0,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                            <CheckBox x:Name="enablePrintingCheckBox" 
                                      Content="Enable printing" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=EnablePrinting, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="showPrintButtonCheckBox" 
                                      Content="Show print button" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=ShowPrintButton, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="printOnlyOriginalsCheckBox" 
                                      Content="Print only original photos" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=PrintOnlyOriginals, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="allowReprintsCheckBox" 
                                      Content="Allow reprints" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=AllowReprints, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="showPrintDialogCheckBox" 
                                      Content="Show print dialog" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=ShowPrintDialog, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="autoRoutePrinterCheckBox" 
                                      Content="Auto route to printer based on size" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=AutoRoutePrinter, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="duplicate2x6To4x6CheckBox" 
                                      Content="Duplicate 2x6 prints to 4x6" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=Duplicate2x6To4x6, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="autoRotateForPrintingCheckBox" 
                                      Content="Auto rotate for printing" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=AutoRotateForPrinting, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                        </StackPanel>
                    </Border>
                    
                    <!-- Print Limits -->
                    <TextBlock Text="Print Limits" Style="{StaticResource SectionTitleStyle}" Margin="0,20,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                            <TextBlock Text="Max prints per session:" Style="{StaticResource SettingsTextStyle}"/>
                            <Slider x:Name="maxSessionPrintsSlider" 
                                    Minimum="0" 
                                    Maximum="50" 
                                    Value="{Binding Source={x:Static properties:Settings.Default}, Path=MaxSessionPrints, Mode=TwoWay}"
                                    TickFrequency="5"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Style="{StaticResource SettingsSliderStyle}"/>
                            <TextBlock Text="{Binding ElementName=maxSessionPrintsSlider, Path=Value, StringFormat='Current: {0} prints'}" 
                                       Style="{StaticResource SettingsTextStyle}" 
                                       Foreground="#8A8BA3" 
                                       FontSize="13"/>
                            
                            <TextBlock Text="Max prints per event:" Style="{StaticResource SettingsTextStyle}" Margin="0,15,0,0"/>
                            <Slider x:Name="maxEventPrintsSlider" 
                                    Minimum="0" 
                                    Maximum="500" 
                                    Value="{Binding Source={x:Static properties:Settings.Default}, Path=MaxEventPrints, Mode=TwoWay}"
                                    TickFrequency="50"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Style="{StaticResource SettingsSliderStyle}"/>
                            <TextBlock Text="{Binding ElementName=maxEventPrintsSlider, Path=Value, StringFormat='Current: {0} prints'}" 
                                       Style="{StaticResource SettingsTextStyle}" 
                                       Foreground="#8A8BA3" 
                                       FontSize="13"/>
                            
                            <TextBlock Text="Default print copies:" Style="{StaticResource SettingsTextStyle}" Margin="0,15,0,0"/>
                            <Slider x:Name="defaultPrintCopiesSlider" 
                                    Minimum="1" 
                                    Maximum="10" 
                                    Value="{Binding Source={x:Static properties:Settings.Default}, Path=DefaultPrintCopies, Mode=TwoWay}"
                                    TickFrequency="1"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Style="{StaticResource SettingsSliderStyle}"/>
                            <TextBlock Text="{Binding ElementName=defaultPrintCopiesSlider, Path=Value, StringFormat='Current: {0} copies'}" 
                                       Style="{StaticResource SettingsTextStyle}" 
                                       Foreground="#8A8BA3" 
                                       FontSize="13"/>
                        </StackPanel>
                    </Border>
                    
                    <!-- Advanced Print Settings -->
                    <TextBlock Text="Advanced Print Settings" Style="{StaticResource SectionTitleStyle}" Margin="0,20,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                            <CheckBox x:Name="printLandscapeCheckBox" 
                                      Content="Print in landscape orientation" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=PrintLandscape, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="printBorderlessCheckBox" 
                                      Content="Borderless printing" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=PrintBorderless, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="printFitToPageCheckBox" 
                                      Content="Fit to page" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=PrintFitToPage, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <TextBlock Text="Print quality:" Style="{StaticResource SettingsTextStyle}" Margin="0,15,0,0"/>
                            <Slider x:Name="printQualitySlider" 
                                    Minimum="1" 
                                    Maximum="5" 
                                    Value="{Binding Source={x:Static properties:Settings.Default}, Path=PrintQuality, Mode=TwoWay}"
                                    TickFrequency="1"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Style="{StaticResource SettingsSliderStyle}"/>
                            <TextBlock Foreground="#8A8BA3" 
                                       FontSize="13">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource SettingsTextStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=printQualitySlider, Path=Value}" Value="1">
                                                <Setter Property="Text" Value="Quality: Draft"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=printQualitySlider, Path=Value}" Value="2">
                                                <Setter Property="Text" Value="Quality: Normal"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=printQualitySlider, Path=Value}" Value="3">
                                                <Setter Property="Text" Value="Quality: Good"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=printQualitySlider, Path=Value}" Value="4">
                                                <Setter Property="Text" Value="Quality: High"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ElementName=printQualitySlider, Path=Value}" Value="5">
                                                <Setter Property="Text" Value="Quality: Best"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    
                    <!-- DNP Printer Settings -->
                    <TextBlock Text="DNP Printer Settings" Style="{StaticResource SectionTitleStyle}" Margin="0,20,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                            <CheckBox x:Name="dnpOvercoatCheckBox" 
                                      Content="Apply overcoat protection" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=DnpOvercoat, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="dnpLusterFinishCheckBox" 
                                      Content="Luster finish" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=DnpLusterFinish, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <CheckBox x:Name="dnp2InchCutCheckBox" 
                                      Content="Enable 2 inch cut for 2x6 prints" 
                                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=Dnp2InchCut, Mode=TwoWay}"
                                      Style="{StaticResource SettingsCheckBoxStyle}"/>
                            
                            <TextBlock Text="Print density adjustment:" Style="{StaticResource SettingsTextStyle}" Margin="0,15,0,0"/>
                            <Slider x:Name="dnpPrintDensitySlider" 
                                    Minimum="-50" 
                                    Maximum="50" 
                                    Value="{Binding Source={x:Static properties:Settings.Default}, Path=DnpPrintDensity, Mode=TwoWay}"
                                    TickFrequency="10"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Style="{StaticResource SettingsSliderStyle}"/>
                            <TextBlock Text="{Binding ElementName=dnpPrintDensitySlider, Path=Value, StringFormat='Density: {0}'}" 
                                       Style="{StaticResource SettingsTextStyle}" 
                                       Foreground="#8A8BA3" 
                                       FontSize="13"/>
                            
                            <TextBlock Text="Color balance adjustments:" Style="{StaticResource SettingsTextStyle}" Margin="0,15,0,0"/>
                            
                            <TextBlock Text="Cyan/Red:" Style="{StaticResource SettingsTextStyle}" FontSize="13"/>
                            <Slider x:Name="dnpCyanRedSlider" 
                                    Minimum="-50" 
                                    Maximum="50" 
                                    Value="{Binding Source={x:Static properties:Settings.Default}, Path=DnpCyanRed, Mode=TwoWay}"
                                    TickFrequency="10"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Style="{StaticResource SettingsSliderStyle}"/>
                            
                            <TextBlock Text="Magenta/Green:" Style="{StaticResource SettingsTextStyle}" FontSize="13"/>
                            <Slider x:Name="dnpMagentaGreenSlider" 
                                    Minimum="-50" 
                                    Maximum="50" 
                                    Value="{Binding Source={x:Static properties:Settings.Default}, Path=DnpMagentaGreen, Mode=TwoWay}"
                                    TickFrequency="10"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Style="{StaticResource SettingsSliderStyle}"/>
                            
                            <TextBlock Text="Yellow/Blue:" Style="{StaticResource SettingsTextStyle}" FontSize="13"/>
                            <Slider x:Name="dnpYellowBlueSlider" 
                                    Minimum="-50" 
                                    Maximum="50" 
                                    Value="{Binding Source={x:Static properties:Settings.Default}, Path=DnpYellowBlue, Mode=TwoWay}"
                                    TickFrequency="10"
                                    IsSnapToTickEnabled="True"
                                    TickPlacement="BottomRight"
                                    Style="{StaticResource SettingsSliderStyle}"/>
                        </StackPanel>
                    </Border>
                    
                </StackPanel>
            </Expander>
            
            <!-- User Interface & Display Settings -->
            <Expander Header="User Interface &amp; Display" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_TouchPointer}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Touch Interface Settings -->
                    <TextBlock Text="Touch Interface" Style="{StaticResource SectionTitleStyle}" Margin="0,0,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                    
                    <CheckBox x:Name="fullscreenCheckBox" 
                              Content="Launch in fullscreen mode" 
                              Style="{StaticResource SettingsCheckBoxStyle}"/>
                    
                    <CheckBox x:Name="hideCursorCheckBox" 
                              Content="Hide mouse cursor during operation" 
                              Style="{StaticResource SettingsCheckBoxStyle}"/>
                    
                    <TextBlock Text="Button size scaling" Style="{StaticResource SettingsTextStyle}"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="buttonSizeSlider" 
                                Minimum="0.8" 
                                Maximum="1.5" 
                                Value="{Binding Source={x:Static properties:Settings.Default}, Path=ButtonSizeScale, Mode=TwoWay}" 
                                TickPlacement="BottomRight" 
                                TickFrequency="0.1" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="ButtonSizeSlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"/>
                        <TextBlock x:Name="buttonSizeValueText" 
                                   Text="100%" 
                                   VerticalAlignment="Center" 
                                   Margin="20,0,0,0" 
                                   Foreground="White" 
                                   FontWeight="Bold"
                                   FontSize="18"/>
                    </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Expander>
            
            <!-- Security & Privacy Settings -->
            <Expander Header="Security &amp; Privacy" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Shield}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Security Settings -->
                    <TextBlock Text="Security Settings" Style="{StaticResource SectionTitleStyle}" Margin="0,0,0,15"/>
                    <Border Style="{StaticResource GlassSectionStyle}">
                        <StackPanel>
                    
                    <CheckBox x:Name="enableLockCheckBox" 
                              Content="Enable PIN lock feature" 
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              Checked="EnableLockCheckBox_Checked"
                              Unchecked="EnableLockCheckBox_Unchecked"/>
                    
                    <StackPanel x:Name="pinSettingsPanel" Margin="0,10,0,0" Visibility="Collapsed">
                        <TextBlock Text="Current PIN Code" Style="{StaticResource SettingsTextStyle}"/>
                        <Grid Margin="0,5,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <PasswordBox x:Name="currentPinBox" 
                                         Grid.Column="0"
                                         MaxLength="6"
                                         FontSize="16"
                                         Padding="8"
                                         Background="#1E1E1E"
                                         Foreground="White"
                                         BorderBrush="#555"
                                         PasswordChanged="CurrentPinBox_PasswordChanged"/>
                            <TextBlock Grid.Column="1" 
                                       Text="(Enter to verify)" 
                                       FontSize="12"
                                       Foreground="#AAA"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0"/>
                        </Grid>
                        
                        <TextBlock Text="New PIN Code (4-6 digits)" Style="{StaticResource SettingsTextStyle}"/>
                        <Grid Margin="0,5,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <PasswordBox x:Name="newPinBox" 
                                         Grid.Column="0"
                                         MaxLength="6"
                                         FontSize="16"
                                         Padding="8"
                                         Background="#1E1E1E"
                                         Foreground="White"
                                         BorderBrush="#555"
                                         IsEnabled="False"
                                         PasswordChanged="NewPinBox_PasswordChanged"/>
                            <TextBlock x:Name="pinStrengthText"
                                       Grid.Column="1" 
                                       Text="" 
                                       FontSize="12"
                                       Foreground="#AAA"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0"/>
                        </Grid>
                        
                        <TextBlock Text="Confirm New PIN" Style="{StaticResource SettingsTextStyle}"/>
                        <Grid Margin="0,5,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="200"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <PasswordBox x:Name="confirmPinBox" 
                                         Grid.Column="0"
                                         MaxLength="6"
                                         FontSize="16"
                                         Padding="8"
                                         Background="#1E1E1E"
                                         Foreground="White"
                                         BorderBrush="#555"
                                         IsEnabled="False"
                                         PasswordChanged="ConfirmPinBox_PasswordChanged"/>
                            <TextBlock x:Name="pinMatchText"
                                       Grid.Column="1" 
                                       Text="" 
                                       FontSize="12"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0"/>
                        </Grid>
                        
                        <Button x:Name="changePinButton" 
                                Content="Change PIN" 
                                Width="150"
                                HorizontalAlignment="Left"
                                Padding="10,8"
                                Background="#4CAF50"
                                Foreground="White"
                                FontSize="14"
                                FontWeight="Bold"
                                IsEnabled="False"
                                Click="ChangePinButton_Click">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}"
                                            CornerRadius="5">
                                        <ContentPresenter HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        
                        <TextBlock x:Name="pinStatusText" 
                                   Text="" 
                                   FontSize="12"
                                   Margin="0,10,0,0"
                                   HorizontalAlignment="Left"/>
                    </StackPanel>
                    
                    <TextBlock Text="Auto-lock timeout (0 = disabled)" 
                               Style="{StaticResource SettingsTextStyle}"
                               Margin="0,15,0,0"/>
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,20">
                        <Slider x:Name="autoLockTimeoutSlider" 
                                Minimum="0" 
                                Maximum="60" 
                                Value="{Binding Source={x:Static properties:Settings.Default}, Path=AutoLockTimeout, Mode=TwoWay}" 
                                TickPlacement="BottomRight" 
                                TickFrequency="5" 
                                IsSnapToTickEnabled="True"
                                Width="300"
                                ValueChanged="AutoLockTimeoutSlider_ValueChanged"
                                Style="{StaticResource SettingsSliderStyle}"/>
                        <TextBlock x:Name="autoLockTimeoutText" 
                                   Text="Disabled" 
                                   VerticalAlignment="Center"
                                   Margin="10,0,0,0"
                                   FontSize="14"
                                   Foreground="White"/>
                    </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Expander>
            
            <!-- Cloud & Sharing Settings -->
            <Expander Header="Cloud &amp; Sharing" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Cloud}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
            
                    <!-- Cloud Sharing Settings Section -->
            <Border CornerRadius="10" Padding="20" Margin="0,15,0,0">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#1A1F3A" Offset="0"/>
                        <GradientStop Color="#252B4A" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#3A4060" Offset="0"/>
                        <GradientStop Color="#4A5080" Offset="1"/>
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Border.BorderThickness>1</Border.BorderThickness>
                <StackPanel>
                    <Grid Margin="0,0,0,15">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Cloud Sharing Settings" 
                                   FontSize="18" FontWeight="Bold" Foreground="White"/>
                        <CheckBox Grid.Column="1" x:Name="enableCloudSharingCheckBox"
                                  Content="Enable Cloud Sharing" 
                                  HorizontalAlignment="Right"
                                  FontSize="14" Foreground="#BBB"
                                  VerticalAlignment="Center"
                                  IsChecked="False"
                                  Checked="EnableCloudSharing_Changed"
                                  Unchecked="EnableCloudSharing_Changed"/>
                    </Grid>

                    <!-- AWS S3 Settings -->
                    <StackPanel x:Name="cloudSettingsPanel" IsEnabled="False">
                        <TextBlock Text="Amazon S3 Configuration" FontWeight="Bold" FontSize="14" Foreground="#DDD" Margin="0,10,0,10"/>
                        
                        <TextBlock Text="AWS Access Key ID:" Style="{StaticResource SettingsTextStyle}"/>
                        <TextBox x:Name="awsAccessKeyBox" 
                                 Width="400" HorizontalAlignment="Left"
                                 FontSize="14" Padding="8"
                                 Background="#0F1320" Foreground="White" BorderBrush="#3A4060"
                                 Margin="0,5,0,10"/>
                        
                        <TextBlock Text="AWS Secret Access Key:" Style="{StaticResource SettingsTextStyle}"/>
                        <PasswordBox x:Name="awsSecretKeyBox" 
                                     Width="400" HorizontalAlignment="Left"
                                     FontSize="14" Padding="8"
                                     Background="#0F1320" Foreground="White" BorderBrush="#3A4060"
                                     Margin="0,5,0,10"/>
                        
                        <TextBlock Text="S3 Bucket Name:" Style="{StaticResource SettingsTextStyle}"/>
                        <TextBox x:Name="s3BucketNameBox" 
                                 Width="400" HorizontalAlignment="Left"
                                 FontSize="14" Padding="8"
                                 Background="#0F1320" Foreground="White" BorderBrush="#3A4060"
                                 Text="photobooth-shares"
                                 Margin="0,5,0,10"/>
                        
                        <TextBlock Text="Gallery Base URL:" Style="{StaticResource SettingsTextStyle}"/>
                        <TextBox x:Name="galleryBaseUrlBox" 
                                 Width="400" HorizontalAlignment="Left"
                                 FontSize="14" Padding="8"
                                 Background="#0F1320" Foreground="White" BorderBrush="#3A4060"
                                 Text="https://photos.yourapp.com"
                                 Margin="0,5,0,15"/>

                        <!-- Signed URL Toggle -->
                        <CheckBox x:Name="usePresignedUrlsCheckBox"
                                  Content="Use Pre‑Signed URLs (private bucket)"
                                  ToolTip="When enabled, links embed time‑limited signatures. Disable for clean public URLs (requires public read on events/*)."
                                  FontSize="14" Foreground="#BBB"
                                  IsChecked="False"
                                  Margin="0,0,0,10"/>
                        
                        <!-- Twilio SMS Settings -->
                        <TextBlock Text="Twilio SMS Configuration" FontWeight="Bold" FontSize="14" Foreground="#DDD" Margin="0,10,0,10"/>
                        
                        <CheckBox x:Name="enableSmsCheckBox"
                                  Content="Enable SMS Sharing" 
                                  FontSize="14" Foreground="#BBB"
                                  IsChecked="False"
                                  Checked="EnableSms_Changed"
                                  Unchecked="EnableSms_Changed"
                                  Margin="0,0,0,10"/>
                        
                        <StackPanel x:Name="smsSettingsPanel" IsEnabled="False">
                            <TextBlock Text="Twilio Account SID:" Style="{StaticResource SettingsTextStyle}"/>
                            <TextBox x:Name="twilioSidBox" 
                                     Width="400" HorizontalAlignment="Left"
                                     FontSize="14" Padding="8"
                                     Background="#0F1320" Foreground="White" BorderBrush="#3A4060"
                                     Margin="0,5,0,10"/>
                            
                            <TextBlock Text="Twilio Auth Token:" Style="{StaticResource SettingsTextStyle}"/>
                            <PasswordBox x:Name="twilioAuthTokenBox" 
                                         Width="400" HorizontalAlignment="Left"
                                         FontSize="14" Padding="8"
                                         Background="#0F1320" Foreground="White" BorderBrush="#3A4060"
                                         Margin="0,5,0,10"/>
                            
                            <TextBlock Text="Twilio Phone Number (from):" Style="{StaticResource SettingsTextStyle}"/>
                            <TextBox x:Name="twilioPhoneBox" 
                                     Width="400" HorizontalAlignment="Left"
                                     FontSize="14" Padding="8"
                                     Background="#0F1320" Foreground="White" BorderBrush="#3A4060"
                                     Margin="0,5,0,10"/>
                            
                            <Separator Margin="0,10,0,10" Background="#3A4060"/>
                            
                            <TextBlock Text="Test Phone Number (to send test SMS):" Style="{StaticResource SettingsTextStyle}"/>
                            <Grid Margin="0,5,0,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="250"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="testPhoneNumberBox" 
                                         Grid.Column="0"
                                         FontSize="14" 
                                         Padding="8"
                                         Background="#0F1320" 
                                         Foreground="White" 
                                         BorderBrush="#3A4060"
                                         ToolTip="Enter phone number to receive test SMS (e.g., +1234567890)"/>
                                <TextBlock Grid.Column="1" 
                                           Text="📝 Include country code" 
                                           FontSize="11"
                                           Foreground="#888"
                                           VerticalAlignment="Center"
                                           Margin="10,0,0,0"/>
                            </Grid>
                        </StackPanel>
                        
                        <!-- Sharing Options -->
                        <TextBlock Text="Sharing Options" FontWeight="Bold" FontSize="14" Foreground="#DDD" Margin="0,15,0,10"/>
                        
                        <CheckBox x:Name="autoShareCheckBox"
                                  Content="Automatically share after session complete" 
                                  FontSize="14" Foreground="#BBB"
                                  IsChecked="False"
                                  Margin="0,5,0,5"/>
                        
                        <CheckBox x:Name="optimizePhotosCheckBox"
                                  Content="Optimize photos for web (reduce size)" 
                                  FontSize="14" Foreground="#BBB"
                                  IsChecked="True"
                                  Margin="0,5,0,5"/>
                        
                        <CheckBox x:Name="cleanupAfterShareCheckBox"
                                  Content="Delete local photos after successful upload" 
                                  FontSize="14" Foreground="#BBB"
                                  IsChecked="False"
                                  Margin="0,5,0,10"/>
                        
                        <!-- Test Connection Buttons -->
                        <StackPanel Orientation="Horizontal" Margin="0,15,0,0">
                            <Button x:Name="testCloudConnectionButton"
                                    Content="☁️ Test AWS Connection" 
                                    Width="180"
                                    Height="40"
                                    Margin="0,0,10,0"
                                    Padding="15,8"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="White"
                                    Click="TestCloudConnection_Click">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                    <GradientStop Color="#4299E1" Offset="0"/>
                                                    <GradientStop Color="#3182CE" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border x:Name="border" 
                                                            Background="{TemplateBinding Background}"
                                                            CornerRadius="8"
                                                            RenderTransformOrigin="0.5,0.5">
                                                        <Border.RenderTransform>
                                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                        </Border.RenderTransform>
                                                        <Border.Effect>
                                                            <DropShadowEffect Color="#3182CE" 
                                                                            BlurRadius="15" 
                                                                            ShadowDepth="0" 
                                                                            Opacity="0.3"/>
                                                        </Border.Effect>
                                                        <ContentPresenter HorizontalAlignment="Center" 
                                                                        VerticalAlignment="Center"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="border" Property="Background">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                        <GradientStop Color="#63B3ED" Offset="0"/>
                                                                        <GradientStop Color="#4299E1" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="border" Property="Effect">
                                                                <Setter.Value>
                                                                    <DropShadowEffect Color="#4299E1" 
                                                                                    BlurRadius="20" 
                                                                                    ShadowDepth="0" 
                                                                                    Opacity="0.5"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="border" Property="RenderTransform">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="border" Property="Background">
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="#4A5568"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Foreground" Value="#718096"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                            
                            <Button x:Name="testTwilioButton"
                                    Content="📱 Test SMS" 
                                    Width="140"
                                    Height="40"
                                    Padding="15,8"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    Foreground="White"
                                    Click="TestTwilio_Click"
                                    IsEnabled="{Binding ElementName=smsSettingsPanel, Path=IsEnabled}">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                    <GradientStop Color="#9F7AEA" Offset="0"/>
                                                    <GradientStop Color="#805AD5" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border x:Name="border" 
                                                            Background="{TemplateBinding Background}"
                                                            CornerRadius="8"
                                                            RenderTransformOrigin="0.5,0.5">
                                                        <Border.RenderTransform>
                                                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                        </Border.RenderTransform>
                                                        <Border.Effect>
                                                            <DropShadowEffect Color="#805AD5" 
                                                                            BlurRadius="15" 
                                                                            ShadowDepth="0" 
                                                                            Opacity="0.3"/>
                                                        </Border.Effect>
                                                        <ContentPresenter HorizontalAlignment="Center" 
                                                                        VerticalAlignment="Center"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="border" Property="Background">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                        <GradientStop Color="#B794F4" Offset="0"/>
                                                                        <GradientStop Color="#9F7AEA" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="border" Property="Effect">
                                                                <Setter.Value>
                                                                    <DropShadowEffect Color="#9F7AEA" 
                                                                                    BlurRadius="20" 
                                                                                    ShadowDepth="0" 
                                                                                    Opacity="0.5"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="border" Property="RenderTransform">
                                                                <Setter.Value>
                                                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="border" Property="Background">
                                                                <Setter.Value>
                                                                    <SolidColorBrush Color="#4A5568"/>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Foreground" Value="#718096"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </Border>
                </StackPanel>
            </Expander>
            
            <!-- Debug & Logging Settings -->
            <Expander Header="Debug &amp; Logging" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Settings}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Debug Logging Toggle -->
                    <Border Background="#2A2A2A" 
                            CornerRadius="8" 
                            Padding="15" 
                            Margin="0,0,0,15">
                        <StackPanel>
                            <TextBlock Text="Enable Debug Logging" 
                                       FontSize="16" 
                                       FontWeight="SemiBold" 
                                       Foreground="White" 
                                       Margin="0,0,0,8"/>
                            
                            <TextBlock Text="Enable detailed debug logging for troubleshooting. Debug messages appear in Visual Studio Debug Output window and logging tools."
                                       FontSize="12"
                                       Foreground="#B0B0B0"
                                       TextWrapping="Wrap"
                                       Margin="0,0,0,12"/>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Grid.Column="0"
                                           Text="Disabled"
                                           FontSize="14"
                                           VerticalAlignment="Center"
                                           Foreground="#4CAF50"/>
                                
                                <CheckBox x:Name="DebugLoggingToggle"
                                          Grid.Column="1"
                                          Style="{StaticResource SettingsCheckBoxStyle}"
                                          Checked="DebugLoggingToggle_Checked"
                                          Unchecked="DebugLoggingToggle_Unchecked"/>
                            </Grid>
                        </StackPanel>
                    </Border>
                    
                    <!-- Debug Information -->
                    <Border Background="#1F4E79" 
                            CornerRadius="8" 
                            Padding="15" 
                            Margin="0,15,0,0">
                        <StackPanel>
                            <TextBlock Text="Debug Output Locations" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="#4CAF50" 
                                       Margin="0,0,0,8"/>
                            
                            <TextBlock FontSize="12" 
                                       Foreground="#B0B0B0" 
                                       TextWrapping="Wrap">
                                <Run Text="When debug logging is enabled, messages appear in:"/>
                                <LineBreak/>
                                <Run Text="• Visual Studio Debug Output window"/>
                                <LineBreak/>
                                <Run Text="• Debug console applications"/>
                                <LineBreak/>
                                <Run Text="• External logging tools and frameworks"/>
                                <LineBreak/>
                                <LineBreak/>
                                <Run Text="Debug categories include: UI operations, camera operations, queue status, gallery actions, sharing operations, and session management."/>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                    
                    <!-- Debug Status -->
                    <Border Background="#1F4E79" 
                            CornerRadius="8" 
                            Padding="15" 
                            Margin="0,15,0,0">
                        <StackPanel>
                            <TextBlock Text="Current Debug Status" 
                                       FontSize="14" 
                                       FontWeight="SemiBold" 
                                       Foreground="#4CAF50" 
                                       Margin="0,0,0,8"/>
                            
                            <TextBlock x:Name="DebugStatusText"
                                       FontSize="12" 
                                       Foreground="#B0B0B0"
                                       Text="Debug logging is currently disabled"/>
                        </StackPanel>
                    </Border>
                    
                </StackPanel>
            </Expander>
            
            <!-- Helper Settings Section -->
            <Expander Header="Helper Settings" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Settings}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Web API Settings -->
                    <Border Style="{StaticResource GlassSectionStyle}" Margin="0,10,0,10">
                        <StackPanel Margin="30">
                            <TextBlock Text="Web API Control Panel" 
                                       Foreground="White"
                                       FontSize="18" FontWeight="Bold" Margin="0,0,0,20"/>
                            
                            <!-- Web API Status -->
                            <Grid Margin="0,10,0,20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Grid.Column="0" Text="Status:" 
                                           Foreground="#B0B0B0" FontSize="14"
                                           VerticalAlignment="Center" Margin="0,0,10,0"/>
                                <TextBlock Grid.Column="1" x:Name="WebApiStatusText"
                                           FontSize="14" FontWeight="SemiBold"
                                           Foreground="#90EE90"
                                           Text="Active on http://localhost:8080/"/>
                            </Grid>
                            
                            <!-- Quick Access Buttons -->
                            <TextBlock Text="Quick Access" 
                                       Foreground="White"
                                       FontSize="14" FontWeight="SemiBold" Margin="0,0,0,10"/>
                            
                            <WrapPanel Margin="0,0,0,20">
                                <Button x:Name="OpenWebControlButton"
                                        Content="🌐 Open Web Control Panel" 
                                        Click="OpenWebControl_Click"
                                        Margin="0,5,10,5"
                                        Padding="15,8"
                                        Background="#FF4CAF50"
                                        Foreground="White"
                                        FontWeight="Bold"
                                        Cursor="Hand">
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="#FF45A049"
                                                    BorderThickness="1"
                                                    CornerRadius="4">
                                                <ContentPresenter HorizontalAlignment="Center" 
                                                                  VerticalAlignment="Center"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FF5CBF60"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                
                                <Button x:Name="TestApiHealthButton"
                                        Content="🔍 Test API Health" 
                                        Click="TestApiHealth_Click"
                                        Margin="0,5,10,5"
                                        Padding="15,8"
                                        Background="#FF2196F3"
                                        Foreground="White"
                                        FontWeight="Bold"
                                        Cursor="Hand">
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="#FF1976D2"
                                                    BorderThickness="1"
                                                    CornerRadius="4">
                                                <ContentPresenter HorizontalAlignment="Center" 
                                                                  VerticalAlignment="Center"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FF42A5F5"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                
                                <Button x:Name="ShowApiDocsButton"
                                        Content="📖 View API Docs" 
                                        Click="ShowApiDocs_Click"
                                        Margin="0,5,10,5"
                                        Padding="15,8"
                                        Background="#FF9C27B0"
                                        Foreground="White"
                                        FontWeight="Bold"
                                        Cursor="Hand">
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}"
                                                    BorderBrush="#FF7B1FA2"
                                                    BorderThickness="1"
                                                    CornerRadius="4">
                                                <ContentPresenter HorizontalAlignment="Center" 
                                                                  VerticalAlignment="Center"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FFAB47BC"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </WrapPanel>
                            
                            <!-- Web API Configuration -->
                            <TextBlock Text="Configuration" 
                                       Foreground="White"
                                       FontSize="14" FontWeight="SemiBold" Margin="0,10,0,10"/>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Port Setting -->
                                <TextBlock Grid.Row="0" Grid.Column="0"
                                           Text="Port:" 
                                           Foreground="#B0B0B0" FontSize="13"
                                           VerticalAlignment="Center" Margin="0,5"/>
                                <TextBox Grid.Row="0" Grid.Column="1"
                                         x:Name="WebApiPortTextBox"
                                         Text="8080"
                                         IsReadOnly="True"
                                         Background="#FF3A3A3A"
                                         Foreground="White"
                                         BorderBrush="#FF555555"
                                         Padding="8,5"
                                         Margin="0,5"/>
                                <TextBlock Grid.Row="0" Grid.Column="2"
                                           Text="(Requires restart to change)"
                                           Foreground="#FF888888" FontSize="11"
                                           VerticalAlignment="Center" Margin="10,5,0,5"/>
                                
                                <!-- Enable/Disable -->
                                <TextBlock Grid.Row="1" Grid.Column="0"
                                           Text="Auto-start:" 
                                           Foreground="#B0B0B0" FontSize="13"
                                           VerticalAlignment="Center" Margin="0,5"/>
                                <CheckBox Grid.Row="1" Grid.Column="1"
                                          x:Name="WebApiAutoStartCheckBox"
                                          IsChecked="True"
                                          Content="Enabled"
                                          Foreground="White"
                                          VerticalAlignment="Center"
                                          Margin="0,5"/>
                                
                                <!-- Network Access -->
                                <TextBlock Grid.Row="2" Grid.Column="0"
                                           Text="Network Access:" 
                                           Foreground="#B0B0B0" FontSize="13"
                                           VerticalAlignment="Center" Margin="0,5"/>
                                <TextBlock Grid.Row="2" Grid.Column="1"
                                           x:Name="NetworkAccessText"
                                           Text="Local + Network"
                                           Foreground="#90EE90" FontSize="13"
                                           VerticalAlignment="Center" Margin="0,5"/>
                            </Grid>
                            
                            <!-- Mobile Access Info -->
                            <Border Background="#FF2A2A2A" 
                                    BorderBrush="#FF444444" 
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Margin="0,20,0,0"
                                    Padding="15">
                                <StackPanel>
                                    <TextBlock Text="📱 Mobile &amp; Remote Access" 
                                               Foreground="#FFB3E5FC"
                                               FontSize="14" FontWeight="SemiBold" 
                                               Margin="0,0,0,10"/>
                                    <TextBlock TextWrapping="Wrap"
                                               Foreground="#B0B0B0" FontSize="12">
                                        <Run Text="Access from any device on your network:"/>
                                        <LineBreak/>
                                        <Run Text="• " FontWeight="Bold"/>
                                        <Run x:Name="NetworkUrlText" Text="http://[YOUR-IP]:8080/" Foreground="#90EE90"/>
                                        <LineBreak/>
                                        <Run Text="• Works on phones, tablets, and other computers"/>
                                        <LineBreak/>
                                        <Run Text="• Responsive design adapts to screen size"/>
                                    </TextBlock>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </Border>
                    
                    <!-- Sync Services Settings -->
                    <Border Style="{StaticResource GlassSectionStyle}" Margin="0,10,0,10">
                        <StackPanel Margin="30">
                            <TextBlock Text="Cloud Sync Services" 
                                       Foreground="White"
                                       FontSize="18" FontWeight="Bold" Margin="0,0,0,20"/>
                            
                            <!-- Service Status Grid -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Settings Sync -->
                                <CheckBox Grid.Row="0" Grid.Column="0"
                                          x:Name="EnableSettingsSyncCheckBox"
                                          Content="Settings Sync Service"
                                          Foreground="White"
                                          FontWeight="SemiBold"
                                          IsChecked="False"
                                          Margin="0,5"/>
                                <TextBlock Grid.Row="0" Grid.Column="1"
                                           x:Name="SettingsSyncStatusText"
                                           Text="Inactive"
                                           Foreground="#FFE57373"
                                           FontSize="12"
                                           VerticalAlignment="Center"
                                           Margin="10,0"/>
                                <Button Grid.Row="0" Grid.Column="2"
                                        x:Name="TestSettingsSyncButton"
                                        Content="Test"
                                        Click="TestSettingsSync_Click"
                                        Padding="10,3"
                                        Margin="5,0"
                                        FontSize="11"/>
                                
                                <!-- Template Sync -->
                                <CheckBox Grid.Row="1" Grid.Column="0"
                                          x:Name="EnableTemplateSyncCheckBox"
                                          Content="Template Sync Service"
                                          Foreground="White"
                                          FontWeight="SemiBold"
                                          IsChecked="False"
                                          Margin="0,5"/>
                                <TextBlock Grid.Row="1" Grid.Column="1"
                                           x:Name="TemplateSyncStatusText"
                                           Text="Inactive"
                                           Foreground="#FFE57373"
                                           FontSize="12"
                                           VerticalAlignment="Center"
                                           Margin="10,0"/>
                                <Button Grid.Row="1" Grid.Column="2"
                                        x:Name="TestTemplateSyncButton"
                                        Content="Test"
                                        Click="TestTemplateSync_Click"
                                        Padding="10,3"
                                        Margin="5,0"
                                        FontSize="11"/>
                                
                                <!-- PhotoBooth Sync -->
                                <CheckBox Grid.Row="2" Grid.Column="0"
                                          x:Name="EnablePhotoBoothSyncCheckBox"
                                          Content="PhotoBooth Sync Service"
                                          Foreground="White"
                                          FontWeight="SemiBold"
                                          IsChecked="False"
                                          Margin="0,5"/>
                                <TextBlock Grid.Row="2" Grid.Column="1"
                                           x:Name="PhotoBoothSyncStatusText"
                                           Text="Inactive"
                                           Foreground="#FFE57373"
                                           FontSize="12"
                                           VerticalAlignment="Center"
                                           Margin="10,0"/>
                                <Button Grid.Row="2" Grid.Column="2"
                                        x:Name="TestPhotoBoothSyncButton"
                                        Content="Test"
                                        Click="TestPhotoBoothSync_Click"
                                        Padding="10,3"
                                        Margin="5,0"
                                        FontSize="11"/>
                            </Grid>
                            
                            <!-- Sync Configuration Button -->
                            <Button x:Name="ConfigureSyncButton"
                                    Content="⚙️ Configure Sync Settings"
                                    Click="ConfigureSync_Click"
                                    Margin="0,20,0,0"
                                    Padding="15,8"
                                    HorizontalAlignment="Left"
                                    Background="#FF607D8B"
                                    Foreground="White"
                                    FontWeight="Bold"
                                    Cursor="Hand">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="#FF455A64"
                                                BorderThickness="1"
                                                CornerRadius="4">
                                            <ContentPresenter HorizontalAlignment="Center" 
                                                              VerticalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#FF78909C"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                    </Border>
                    
                    <!-- Device Triggers Section -->
                    <Border Style="{StaticResource GlassSectionStyle}" Margin="0,10,0,10">
                        <StackPanel Margin="30">
                            <TextBlock Text="Device Triggers (Arduino, LED, IoT)" 
                                       Foreground="White"
                                       FontSize="18" FontWeight="Bold" Margin="0,0,0,20"/>
                            
                            <TextBlock Text="Connect external devices to trigger on photo events" 
                                       Foreground="#B0B0B0"
                                       FontSize="12" Margin="0,0,0,20"/>
                            
                            <!-- Available Serial Ports -->
                            <Grid Margin="0,0,0,20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Grid.Column="0" Text="Serial Ports:" 
                                           Foreground="#B0B0B0" FontSize="13"
                                           VerticalAlignment="Center"/>
                                
                                <ComboBox Grid.Column="1" x:Name="SerialPortsComboBox"
                                          Background="#FF3A3A3A"
                                          Foreground="White"
                                          BorderBrush="#FF555555"/>
                                
                                <Button Grid.Column="2" x:Name="RefreshPortsButton"
                                        Content="🔄 Refresh"
                                        Click="RefreshPorts_Click"
                                        Margin="10,0,0,0"
                                        Padding="10,5"
                                        HorizontalAlignment="Left"
                                        Background="#FF607D8B"
                                        Foreground="White"/>
                            </Grid>
                            
                            <!-- Bluetooth Devices -->
                            <Grid Margin="0,0,0,20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock Grid.Column="0" Text="Bluetooth Devices:" 
                                           Foreground="#B0B0B0" FontSize="13"
                                           VerticalAlignment="Center"/>
                                
                                <ComboBox Grid.Column="1" x:Name="BluetoothDevicesComboBox"
                                          Background="#FF3A3A3A"
                                          Foreground="White"
                                          BorderBrush="#FF555555"
                                          DisplayMemberPath="Name"
                                          SelectedValuePath="Address"/>
                                
                                <StackPanel Grid.Column="2" Orientation="Horizontal">
                                    <Button x:Name="DiscoverBluetoothButton"
                                            Content="🔍 Discover"
                                            Click="DiscoverBluetooth_Click"
                                            Margin="10,0,0,0"
                                            Padding="10,5"
                                            Background="#FF2196F3"
                                            Foreground="White"/>
                                    
                                    <TextBlock x:Name="BluetoothStatusText"
                                               Text=""
                                               Foreground="#FFB3E5FC"
                                               FontSize="11"
                                               VerticalAlignment="Center"
                                               Margin="10,0,0,0"/>
                                </StackPanel>
                            </Grid>
                            
                            <!-- Configured Triggers List -->
                            <TextBlock Text="Configured Triggers" 
                                       Foreground="White"
                                       FontSize="14" FontWeight="SemiBold" Margin="0,0,0,10"/>
                            
                            <Border Background="#FF2A2A2A" 
                                    BorderBrush="#FF444444" 
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    MinHeight="100"
                                    MaxHeight="200"
                                    Margin="0,0,0,15">
                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <ListBox x:Name="TriggersListBox"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             SelectionChanged="TriggerSelected_Changed">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Border Background="#FF3A3A3A" 
                                                        BorderBrush="#FF555555"
                                                        BorderThickness="1"
                                                        CornerRadius="3"
                                                        Margin="2"
                                                        Padding="10,5">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        
                                                        <StackPanel Grid.Column="0">
                                                            <TextBlock Text="{Binding Name}" 
                                                                       Foreground="White" 
                                                                       FontWeight="SemiBold"/>
                                                            <TextBlock Text="{Binding ConnectionString}" 
                                                                       Foreground="#B0B0B0" 
                                                                       FontSize="11"/>
                                                        </StackPanel>
                                                        
                                                        <CheckBox Grid.Column="1"
                                                                  IsChecked="{Binding IsEnabled}"
                                                                  Content="Enabled"
                                                                  Foreground="White"
                                                                  Margin="10,0"/>
                                                        
                                                        <Button Grid.Column="2"
                                                                Content="❌"
                                                                Click="RemoveTrigger_Click"
                                                                Tag="{Binding Id}"
                                                                Background="Transparent"
                                                                Foreground="#FFE57373"
                                                                BorderThickness="0"
                                                                Padding="5"
                                                                Cursor="Hand"/>
                                                    </Grid>
                                                </Border>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </ScrollViewer>
                            </Border>
                            
                            <!-- Quick Add Buttons -->
                            <TextBlock Text="Quick Add Device" 
                                       Foreground="White"
                                       FontSize="14" FontWeight="SemiBold" Margin="0,10,0,10"/>
                            
                            <WrapPanel Margin="0,0,0,20">
                                <Button x:Name="AddArduinoLedButton"
                                        Content="➕ Arduino LED Strip" 
                                        Click="AddArduinoLed_Click"
                                        Margin="0,5,10,5"
                                        Padding="12,6"
                                        Background="#FF4CAF50"
                                        Foreground="White"
                                        FontWeight="Bold"/>
                                
                                <Button x:Name="AddRelayButton"
                                        Content="➕ Relay Controller" 
                                        Click="AddRelay_Click"
                                        Margin="0,5,10,5"
                                        Padding="12,6"
                                        Background="#FF2196F3"
                                        Foreground="White"
                                        FontWeight="Bold"/>
                                
                                <Button x:Name="AddDmxButton"
                                        Content="➕ DMX Lights" 
                                        Click="AddDmx_Click"
                                        Margin="0,5,10,5"
                                        Padding="12,6"
                                        Background="#FF9C27B0"
                                        Foreground="White"
                                        FontWeight="Bold"/>
                                
                                <Button x:Name="AddWledButton"
                                        Content="➕ WLED WiFi" 
                                        Click="AddWled_Click"
                                        Margin="0,5,10,5"
                                        Padding="12,6"
                                        Background="#FFFF9800"
                                        Foreground="White"
                                        FontWeight="Bold"/>
                                
                                <Button x:Name="AddBluetoothESP32Button"
                                        Content="➕ Bluetooth ESP32" 
                                        Click="AddBluetoothESP32_Click"
                                        Margin="0,5,10,5"
                                        Padding="12,6"
                                        Background="#FF00BCD4"
                                        Foreground="White"
                                        FontWeight="Bold"/>
                                
                                <Button x:Name="AddBluetoothHC05Button"
                                        Content="➕ Bluetooth HC-05" 
                                        Click="AddBluetoothHC05_Click"
                                        Margin="0,5,10,5"
                                        Padding="12,6"
                                        Background="#FF009688"
                                        Foreground="White"
                                        FontWeight="Bold"/>
                                
                                <Button x:Name="AddCustomButton"
                                        Content="➕ Custom Device" 
                                        Click="AddCustomDevice_Click"
                                        Margin="0,5,10,5"
                                        Padding="12,6"
                                        Background="#FF607D8B"
                                        Foreground="White"
                                        FontWeight="Bold"/>
                            </WrapPanel>
                            
                            <!-- Test Trigger Button -->
                            <Button x:Name="TestTriggerButton"
                                    Content="⚡ Test Selected Trigger"
                                    Click="TestTrigger_Click"
                                    Margin="0,10,0,0"
                                    Padding="15,8"
                                    HorizontalAlignment="Left"
                                    Background="#FFE91E63"
                                    Foreground="White"
                                    FontWeight="Bold"
                                    IsEnabled="False">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="#FFC2185B"
                                                BorderThickness="1"
                                                CornerRadius="4">
                                            <ContentPresenter HorizontalAlignment="Center" 
                                                              VerticalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#FFEC407A"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            
                            <!-- Arduino Sample Code Info -->
                            <Border Background="#FF1A1A1A" 
                                    BorderBrush="#FF444444" 
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Margin="0,20,0,0"
                                    Padding="15">
                                <StackPanel>
                                    <TextBlock Text="💡 Arduino Sample Code" 
                                               Foreground="#FFB3E5FC"
                                               FontSize="14" FontWeight="SemiBold" 
                                               Margin="0,0,0,10"/>
                                    <TextBlock TextWrapping="Wrap"
                                               Foreground="#B0B0B0" FontSize="11"
                                               FontFamily="Consolas">
                                        <Run Text="// Arduino LED Control Example"/>
                                        <LineBreak/>
                                        <Run Text="void setup() {"/>
                                        <LineBreak/>
                                        <Run Text="  Serial.begin(9600);"/>
                                        <LineBreak/>
                                        <Run Text="  pinMode(LED_BUILTIN, OUTPUT);"/>
                                        <LineBreak/>
                                        <Run Text="}"/>
                                        <LineBreak/>
                                        <LineBreak/>
                                        <Run Text="void loop() {"/>
                                        <LineBreak/>
                                        <Run Text="  if (Serial.available()) {"/>
                                        <LineBreak/>
                                        <Run Text="    String cmd = Serial.readStringUntil('\n');"/>
                                        <LineBreak/>
                                        <Run Text="    if (cmd == &quot;LED:FLASH:BRIGHT&quot;) {"/>
                                        <LineBreak/>
                                        <Run Text="      // Flash LED for photo capture"/>
                                        <LineBreak/>
                                        <Run Text="      digitalWrite(LED_BUILTIN, HIGH);"/>
                                        <LineBreak/>
                                        <Run Text="      delay(100);"/>
                                        <LineBreak/>
                                        <Run Text="      digitalWrite(LED_BUILTIN, LOW);"/>
                                        <LineBreak/>
                                        <Run Text="    }"/>
                                        <LineBreak/>
                                        <Run Text="  }"/>
                                        <LineBreak/>
                                        <Run Text="}"/>
                                    </TextBlock>
                                    
                                    <Button x:Name="ViewFullArduinoCodeButton"
                                            Content="View Full Arduino Examples"
                                            Click="ViewFullArduinoCode_Click"
                                            Margin="0,10,0,0"
                                            Padding="10,5"
                                            Background="#FF4CAF50"
                                            Foreground="White"
                                            HorizontalAlignment="Left"/>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                    </Border>
                    
                </StackPanel>
            </Expander>
            
            <!-- Capture Modes Section -->
            <Expander Header="Capture Modes" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Camera}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Enable Capture Modes -->
                    <CheckBox x:Name="EnableCaptureModesCheckBox"
                              Style="{StaticResource SettingsCheckBoxStyle}"
                              IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=CaptureModesEnabled}"
                              Margin="0,10">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Enable Multiple Capture Modes" 
                                       Foreground="White" FontWeight="SemiBold"
                                       VerticalAlignment="Center"/>
                            <TextBlock Text="(Allow users to select different capture types)" 
                                       Foreground="#B0B0B0" FontSize="12"
                                       VerticalAlignment="Center" Margin="10,0,0,0"/>
                        </StackPanel>
                    </CheckBox>

                    <!-- Individual Mode Settings -->
                    <Grid Margin="30,20,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Photo Mode -->
                        <CheckBox Grid.Row="0" Grid.Column="0"
                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=CaptureModePhoto}"
                                  IsEnabled="{Binding ElementName=EnableCaptureModesCheckBox, Path=IsChecked}"
                                  Margin="0,5">
                            <TextBlock Text="Photo" Foreground="White" FontWeight="SemiBold"/>
                        </CheckBox>

                        <!-- Video Mode - Now uses the Video Module setting -->
                        <CheckBox Grid.Row="0" Grid.Column="1"
                                  x:Name="CaptureModeVideoCheckBox"
                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                  IsEnabled="{Binding ElementName=EnableCaptureModesCheckBox, Path=IsChecked}"
                                  Margin="0,5"
                                  Checked="CaptureModeVideo_Changed"
                                  Unchecked="CaptureModeVideo_Changed">
                            <TextBlock Text="Video" Foreground="White" FontWeight="SemiBold"/>
                        </CheckBox>

                        <!-- Boomerang Mode -->
                        <CheckBox Grid.Row="1" Grid.Column="0"
                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=CaptureModeBoomerang}"
                                  IsEnabled="{Binding ElementName=EnableCaptureModesCheckBox, Path=IsChecked}"
                                  Margin="0,5">
                            <TextBlock Text="Boomerang" Foreground="White" FontWeight="SemiBold"/>
                        </CheckBox>

                        <!-- GIF Mode -->
                        <CheckBox Grid.Row="1" Grid.Column="1"
                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=CaptureModeGif}"
                                  IsEnabled="{Binding ElementName=EnableCaptureModesCheckBox, Path=IsChecked}"
                                  Margin="0,5">
                            <TextBlock Text="GIF" Foreground="White" FontWeight="SemiBold"/>
                        </CheckBox>

                        <!-- Green Screen Mode -->
                        <CheckBox Grid.Row="2" Grid.Column="0"
                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=CaptureModeGreenScreen}"
                                  IsEnabled="{Binding ElementName=EnableCaptureModesCheckBox, Path=IsChecked}"
                                  Margin="0,5">
                            <TextBlock Text="Green Screen" Foreground="White" FontWeight="SemiBold"/>
                        </CheckBox>

                        <!-- AI Mode -->
                        <CheckBox Grid.Row="2" Grid.Column="1"
                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=CaptureModeAI}"
                                  IsEnabled="{Binding ElementName=EnableCaptureModesCheckBox, Path=IsChecked}"
                                  Margin="0,5">
                            <TextBlock Text="AI Photo" Foreground="White" FontWeight="SemiBold"/>
                        </CheckBox>

                        <!-- Flipbook Mode -->
                        <CheckBox Grid.Row="3" Grid.Column="0"
                                  Style="{StaticResource SettingsCheckBoxStyle}"
                                  IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=CaptureModeFlipbook}"
                                  IsEnabled="{Binding ElementName=EnableCaptureModesCheckBox, Path=IsChecked}"
                                  Margin="0,5">
                            <TextBlock Text="Flipbook" Foreground="White" FontWeight="SemiBold"/>
                        </CheckBox>
                    </Grid>

                    <!-- Default Mode Selection -->
                    <StackPanel Margin="0,20,0,0">
                        <TextBlock Text="Default Capture Mode:" 
                                   Foreground="White" FontWeight="SemiBold"
                                   Margin="0,0,0,10"/>
                        <ComboBox x:Name="DefaultCaptureModeCombo"
                                  Width="200" HorizontalAlignment="Left"
                                  IsEnabled="{Binding ElementName=EnableCaptureModesCheckBox, Path=IsChecked}"
                                  SelectionChanged="DefaultCaptureModeCombo_SelectionChanged">
                            <ComboBoxItem Content="Photo"/>
                            <ComboBoxItem Content="Video"/>
                            <ComboBoxItem Content="Boomerang"/>
                            <ComboBoxItem Content="Gif"/>
                            <ComboBoxItem Content="GreenScreen"/>
                            <ComboBoxItem Content="AI"/>
                            <ComboBoxItem Content="Flipbook"/>
                        </ComboBox>
                    </StackPanel>
                    
                </StackPanel>
            </Expander>
            
            <!-- Cloud Sync Settings Section -->
            <Expander Header="Cloud Synchronization" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Cloud}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Enable Cloud Sync -->
                    <CheckBox x:Name="EnableCloudSyncCheckBox" 
                              Content="Enable Cloud Synchronization"
                              IsChecked="False"
                              FontSize="14" Foreground="White"
                              Margin="0,0,0,15"
                              Checked="EnableCloudSync_Changed"
                              Unchecked="EnableCloudSync_Changed"
                              ToolTip="Sync templates and settings across multiple photo booths using cloud storage"/>
                    
                    <!-- Cloud Provider Selection -->
                    <TextBlock Text="Cloud Storage Provider" 
                               FontSize="14" 
                               Foreground="White" FontWeight="SemiBold"
                               Margin="0,0,0,10"
                               IsEnabled="{Binding ElementName=EnableCloudSyncCheckBox, Path=IsChecked}"/>
                    <ComboBox x:Name="CloudProviderCombo"
                              Width="250" HorizontalAlignment="Left"
                              IsEnabled="{Binding ElementName=EnableCloudSyncCheckBox, Path=IsChecked}"
                              SelectionChanged="CloudProvider_SelectionChanged"
                              Margin="0,0,0,15">
                        <ComboBoxItem Content="Amazon S3" IsSelected="True"/>
                        <ComboBoxItem Content="Azure Blob Storage"/>
                        <ComboBoxItem Content="Google Cloud Storage"/>
                    </ComboBox>
                    
                    <!-- Sync Settings -->
                    <Grid IsEnabled="{Binding ElementName=EnableCloudSyncCheckBox, Path=IsChecked}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        
                        <!-- S3 Bucket Name -->
                        <TextBlock Text="S3 Bucket Name:" 
                                   Grid.Row="0" Grid.Column="0"
                                   FontSize="14" Foreground="White"
                                   Margin="0,0,15,10"
                                   VerticalAlignment="Center"/>
                        <TextBox x:Name="S3BucketNameTextBox"
                                 Grid.Row="0" Grid.Column="1"
                                 Width="300" HorizontalAlignment="Left"
                                 Margin="0,0,0,10"
                                 Text="{Binding Source={x:Static properties:Settings.Default}, Path=S3BucketName, Mode=TwoWay}"/>
                        
                        <!-- Access Key -->
                        <TextBlock Text="Access Key ID:" 
                                   Grid.Row="1" Grid.Column="0"
                                   FontSize="14" Foreground="White"
                                   Margin="0,0,15,10"
                                   VerticalAlignment="Center"/>
                        <PasswordBox x:Name="S3AccessKeyBox"
                                     Grid.Row="1" Grid.Column="1"
                                     Width="300" HorizontalAlignment="Left"
                                     Margin="0,0,0,10"
                                     PasswordChanged="S3AccessKey_Changed"/>
                        
                        <!-- Secret Key -->
                        <TextBlock Text="Secret Access Key:" 
                                   Grid.Row="2" Grid.Column="0"
                                   FontSize="14" Foreground="White"
                                   Margin="0,0,15,10"
                                   VerticalAlignment="Center"/>
                        <PasswordBox x:Name="S3SecretKeyBox"
                                     Grid.Row="2" Grid.Column="1"
                                     Width="300" HorizontalAlignment="Left"
                                     Margin="0,0,0,10"
                                     PasswordChanged="S3SecretKey_Changed"/>
                        
                        <!-- Region -->
                        <TextBlock Text="AWS Region:" 
                                   Grid.Row="3" Grid.Column="0"
                                   FontSize="14" Foreground="White"
                                   Margin="0,0,15,10"
                                   VerticalAlignment="Center"/>
                        <ComboBox x:Name="S3RegionCombo"
                                  Grid.Row="3" Grid.Column="1"
                                  Width="300" HorizontalAlignment="Left"
                                  Margin="0,0,0,10"
                                  SelectionChanged="S3Region_SelectionChanged">
                            <ComboBoxItem Content="us-east-1" IsSelected="True"/>
                            <ComboBoxItem Content="us-west-2"/>
                            <ComboBoxItem Content="eu-west-1"/>
                            <ComboBoxItem Content="ap-southeast-1"/>
                        </ComboBox>
                        
                        <!-- Device ID -->
                        <TextBlock Text="Device ID:" 
                                   Grid.Row="4" Grid.Column="0"
                                   FontSize="14" Foreground="White"
                                   Margin="0,0,15,10"
                                   VerticalAlignment="Center"/>
                        <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal">
                            <TextBox x:Name="DeviceIdTextBox"
                                     Width="200" HorizontalAlignment="Left"
                                     IsReadOnly="True"
                                     Background="#33FFFFFF"
                                     Text="{Binding Source={x:Static properties:Settings.Default}, Path=DeviceId, Mode=OneWay}"/>
                            <Button x:Name="GenerateDeviceIdButton"
                                    Content="Generate New"
                                    Margin="10,0,0,0"
                                    Padding="10,5"
                                    Click="GenerateDeviceId_Click"/>
                        </StackPanel>
                    </Grid>
                    
                    <!-- Sync Options -->
                    <StackPanel Margin="0,20,0,0"
                                IsEnabled="{Binding ElementName=EnableCloudSyncCheckBox, Path=IsChecked}">
                        <TextBlock Text="Sync Options" 
                                   FontSize="14" 
                                   Foreground="White" FontWeight="SemiBold"
                                   Margin="0,0,0,10"/>
                        
                        <CheckBox x:Name="SyncTemplatesCheckBox" 
                                  Content="Sync Templates"
                                  IsChecked="True"
                                  FontSize="13" Foreground="White"
                                  Margin="0,0,0,8"
                                  Checked="SyncOption_Changed"
                                  Unchecked="SyncOption_Changed"/>
                        
                        <CheckBox x:Name="SyncSettingsCheckBox" 
                                  Content="Sync Settings"
                                  IsChecked="True"
                                  FontSize="13" Foreground="White"
                                  Margin="0,0,0,8"
                                  Checked="SyncOption_Changed"
                                  Unchecked="SyncOption_Changed"/>
                        
                        <CheckBox x:Name="SyncEventsCheckBox" 
                                  Content="Sync Events (with workflow settings)"
                                  IsChecked="True"
                                  FontSize="13" Foreground="White"
                                  Margin="0,0,0,8"
                                  Checked="SyncOption_Changed"
                                  Unchecked="SyncOption_Changed"
                                  ToolTip="Sync event configurations including all workflow settings, templates, and print options across photobooths"/>
                        
                        <CheckBox x:Name="AutoSyncCheckBox" 
                                  Content="Auto-sync on startup"
                                  IsChecked="False"
                                  FontSize="13" Foreground="White"
                                  Margin="0,0,0,8"
                                  Checked="SyncOption_Changed"
                                  Unchecked="SyncOption_Changed"/>
                        
                        <!-- Sync Interval -->
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <TextBlock Text="Sync Interval:" 
                                       FontSize="13" Foreground="White"
                                       VerticalAlignment="Center"
                                       Margin="0,0,10,0"/>
                            <ComboBox x:Name="SyncIntervalCombo"
                                      Width="150"
                                      SelectionChanged="SyncInterval_SelectionChanged">
                                <ComboBoxItem Content="Every 15 minutes"/>
                                <ComboBoxItem Content="Every 30 minutes" IsSelected="True"/>
                                <ComboBoxItem Content="Every hour"/>
                                <ComboBoxItem Content="Every 2 hours"/>
                                <ComboBoxItem Content="Manual only"/>
                            </ComboBox>
                        </StackPanel>
                    </StackPanel>
                    
                    <!-- Sync Actions -->
                    <StackPanel Orientation="Horizontal" 
                                Margin="0,25,0,0"
                                IsEnabled="{Binding ElementName=EnableCloudSyncCheckBox, Path=IsChecked}">
                        <Button x:Name="TestConnectionButton"
                                Content="Test Connection"
                                Width="120"
                                Padding="10,8"
                                Margin="0,0,10,0"
                                Click="TestConnection_Click">
                            <Button.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#667EEA" Offset="0"/>
                                    <GradientStop Color="#764BA2" Offset="1"/>
                                </LinearGradientBrush>
                            </Button.Background>
                        </Button>
                        
                        <Button x:Name="SyncNowButton"
                                Content="Sync Now"
                                Width="120"
                                Padding="10,8"
                                Margin="0,0,10,0"
                                Click="SyncNow_Click">
                            <Button.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#48BB78" Offset="0"/>
                                    <GradientStop Color="#38A169" Offset="1"/>
                                </LinearGradientBrush>
                            </Button.Background>
                        </Button>
                        
                        <Button x:Name="ViewSyncLogButton"
                                Content="View Log"
                                Width="100"
                                Padding="10,8"
                                Click="ViewSyncLog_Click"/>
                    </StackPanel>
                    
                    <!-- Sync Status -->
                    <Border x:Name="SyncStatusBorder"
                            Background="#1A48BB78"
                            BorderBrush="#48BB78"
                            BorderThickness="1"
                            CornerRadius="5"
                            Padding="10"
                            Margin="0,20,0,0"
                            Visibility="Collapsed">
                        <StackPanel>
                            <TextBlock x:Name="SyncStatusText"
                                       Text="Last sync: Never"
                                       FontSize="13"
                                       Foreground="#48BB78"/>
                            <ProgressBar x:Name="SyncProgressBar"
                                         Height="4"
                                         Margin="0,8,0,0"
                                         Visibility="Collapsed"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Expander>
            
            <!-- Actions Section -->
            <Expander Header="Actions" IsExpanded="False" Style="{StaticResource SettingsExpanderStyle}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{StaticResource MDL2_Settings}" FontFamily="{StaticResource SegoeMDL2}" 
                                       Style="{StaticResource SectionIconStyle}" Margin="0,0,15,0"/>
                            <TextBlock Text="{Binding}" Style="{StaticResource SectionTitleStyle}"/>
                        </StackPanel>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <StackPanel Margin="20,15,20,20">
                    
                    <!-- Auto-Save Notice -->
                    <Border Background="#1A4CAF50" 
                            BorderBrush="#4CAF50" 
                            BorderThickness="1" 
                            CornerRadius="8" 
                            Padding="15" 
                            Margin="0,0,0,20">
                        <StackPanel>
                            <TextBlock Text="ℹ Auto-Save Enabled" 
                                       FontWeight="SemiBold" 
                                       FontSize="14" 
                                       Foreground="#4CAF50" 
                                       Margin="0,0,0,5"/>
                            <TextBlock Text="All settings are automatically saved as you change them. No manual save required." 
                                       TextWrapping="Wrap" 
                                       Foreground="#B0B0B0" 
                                       FontSize="12"/>
                        </StackPanel>
                    </Border>
                    
                    <!-- Action Buttons -->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="Reset to Defaults" 
                                Click="ResetSettings_Click"
                                Style="{StaticResource ResetButtonStyle}"
                                ToolTip="Reset all settings to their default values"/>
                        
                        <Button Content="Open Photobooth" 
                                Click="OpenPhotobooth_Click"
                                Style="{StaticResource OpenButtonStyle}"
                                ToolTip="Open the main photobooth application"/>
                    </StackPanel>
                    
                </StackPanel>
            </Expander>
            
        </StackPanel>
    </ScrollViewer>
</UserControl>
