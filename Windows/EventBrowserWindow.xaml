<Window x:Class="Photobooth.Windows.EventBrowserWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Event Manager - Surface Edition"
        WindowState="Maximized"
        WindowStyle="None"
        Topmost="False"
        Background="#0A0E27"
        AllowsTransparency="False"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        ShowInTaskbar="True"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        RenderOptions.BitmapScalingMode="HighQuality"
        TextOptions.TextFormattingMode="Display"
        TextOptions.TextRenderingMode="ClearType"
        FontFamily="Segoe UI">

    <Window.Resources>
        <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <!-- Surface Pro Optimized Colors -->
        <Color x:Key="PrimaryColor">#0A0E27</Color>
        <Color x:Key="SecondaryColor">#1A1E37</Color>
        <Color x:Key="AccentColor">#00D9FF</Color>
        <Color x:Key="AccentPurple">#7928CA</Color>
        <Color x:Key="AccentPink">#FF0080</Color>
        <Color x:Key="TextPrimary">#FFFFFF</Color>
        <Color x:Key="TextSecondary">#B8BCC8</Color>
        
        <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
        <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
        <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
        <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimary}"/>
        <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondary}"/>

        <!-- Gradient Brushes -->
        <LinearGradientBrush x:Key="HeaderGradient" StartPoint="0,0" EndPoint="1,0">
            <GradientStop Color="#0A0E27" Offset="0"/>
            <GradientStop Color="#1A1E37" Offset="0.5"/>
            <GradientStop Color="#0A0E27" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="AccentGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="{StaticResource AccentColor}" Offset="0"/>
            <GradientStop Color="{StaticResource AccentPurple}" Offset="0.5"/>
            <GradientStop Color="{StaticResource AccentPink}" Offset="1"/>
        </LinearGradientBrush>

        <!-- Touch-Optimized Event Card Style -->
        <Style x:Key="EventCardStyle" TargetType="Border">
            <Setter Property="Width" Value="380"/>
            <Setter Property="Height" Value="220"/>
            <Setter Property="Margin" Value="15"/>
            <Setter Property="CornerRadius" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#2A2E47" Offset="0"/>
                        <GradientStop Color="#1A1E37" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                           To="1.05" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                           To="1.05" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                           To="1" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                           To="1" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- Touch Button Style -->
        <Style x:Key="TouchButtonStyle" TargetType="Button">
            <Setter Property="MinHeight" Value="60"/>
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="20,15"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="{StaticResource AccentGradient}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="12"
                                RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="scale" ScaleX="1" ScaleY="1"/>
                            </Border.RenderTransform>
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="15" ShadowDepth="3" Opacity="0.3"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                           Storyboard.TargetProperty="ScaleX"
                                                           To="0.95" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                           Storyboard.TargetProperty="ScaleY"
                                                           To="0.95" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                           Storyboard.TargetProperty="ScaleX"
                                                           To="1" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                           Storyboard.TargetProperty="ScaleY"
                                                           To="1" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Action Button Styles -->
        <Style x:Key="ActionButton" TargetType="Button">
            <Setter Property="Background" Value="#667EEA"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#7982ED"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource ActionButton}">
            <Setter Property="Background" Value="#4A5568"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#5A6578"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource ActionButton}">
            <Setter Property="Background" Value="#E53E3E"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F56565"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Template for event items -->
        <DataTemplate x:Key="EventItemTemplate">
            <Border Style="{StaticResource EventCardStyle}" 
                    MouseLeftButtonDown="EventCard_MouseLeftButtonDown"
                    Tag="{Binding}">
                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="☁️ Create Gallery" Click="CreateGallery_Click" Tag="{Binding}">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasGallery}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem Header="📋 Copy Gallery Link" Click="CopyGalleryLink_Click" Tag="{Binding}">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasGallery}" Value="False">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <MenuItem Header="🔒 Add Password" Click="AddGalleryPassword_Click" Tag="{Binding}">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding HasGallery}" Value="True"/>
                                                <Condition Binding="{Binding IsPasswordProtected}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Edit Event" Click="EditEvent_Click" Tag="{Binding}"/>
                        <MenuItem Header="Delete Event" Click="DeleteEvent_Click" Tag="{Binding}"/>
                    </ContextMenu>
                </Border.ContextMenu>
                
                <Border.Effect>
                    <DropShadowEffect Color="Black" BlurRadius="20" ShadowDepth="5" Opacity="0.3"/>
                </Border.Effect>
                
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Event Type Badge and Gallery Status -->
                    <Grid Grid.Row="0" Margin="15,15,15,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border Grid.Column="0" Background="{StaticResource AccentGradient}" 
                                CornerRadius="15" Padding="12,5">
                            <TextBlock Text="{Binding EventType}" 
                                     FontSize="11" FontWeight="Bold" 
                                     Foreground="White"/>
                        </Border>
                        
                        <!-- Gallery status indicators -->
                        <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="☁️" FontSize="16" VerticalAlignment="Center" Margin="0,0,4,0">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasGallery}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="🔒" FontSize="12" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPasswordProtected}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Grid>

                    <!-- Event Info -->
                    <StackPanel Grid.Row="1" Margin="15,5">
                        <TextBlock Text="{Binding Name}"
                                 FontSize="20" FontWeight="Bold"
                                 Foreground="White"
                                 TextTrimming="CharacterEllipsis"/>
                        <TextBlock Text="{Binding FormattedDate}"
                                 FontSize="14"
                                 Foreground="{StaticResource TextSecondaryBrush}"
                                 Margin="0,5,0,0"/>
                        <TextBlock Text="{Binding Location}"
                                 FontSize="13"
                                 Foreground="{StaticResource TextSecondaryBrush}"
                                 TextTrimming="CharacterEllipsis"
                                 Margin="0,2,0,0"/>

                        <!-- Template Info -->
                        <Border Background="#1A5F7A" CornerRadius="8" Padding="6,3" Margin="0,5,0,0"
                                Visibility="{Binding HasAssignedTemplate, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="🎨" FontSize="12" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                <TextBlock Grid.Column="1" Text="{Binding AssignedTemplateName}"
                                         FontSize="11" Foreground="White"
                                         TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
                                <Button Grid.Column="2" Content="✏️" FontSize="10"
                                        Background="Transparent" BorderThickness="0"
                                        Foreground="White" Cursor="Hand"
                                        Padding="4,2" Margin="5,0,0,0"
                                        Click="EditTemplate_Click" Tag="{Binding}"
                                        ToolTip="Edit Template"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                    
                    <!-- Action buttons -->
                    <Grid Grid.Row="2" Margin="15,5,15,15">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- Gallery buttons -->
                        <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center">
                            <!-- Create Gallery button - visible when no gallery exists -->
                            <Button Content="☁️"
                                    FontSize="14" Padding="10,6"
                                    Click="CreateGalleryButton_Click"
                                    Tag="{Binding}"
                                    ToolTip="Create Gallery">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ActionButton}">
                                        <Setter Property="Background" Value="#FF9800"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasGallery}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#FFA726"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            
                            <!-- Copy Gallery Link button - visible when gallery exists -->
                            <Button Content="📋"
                                    FontSize="14" Padding="10,6"
                                    Click="CopyGalleryLinkButton_Click"
                                    Tag="{Binding}"
                                    ToolTip="Copy Gallery Link">
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ActionButton}">
                                        <Setter Property="Background" Value="#4CAF50"/>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HasGallery}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#66BB6A"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                        
                        <!-- Main action buttons -->
                        <StackPanel Grid.Column="1" Orientation="Horizontal" 
                                    HorizontalAlignment="Right" VerticalAlignment="Bottom">
                            <Button Content="Load" Style="{StaticResource ActionButton}"
                                    FontSize="12" Padding="12,6"
                                    Click="LoadEvent_Click"
                                    Tag="{Binding}"/>
                            <Button Content="Edit" Style="{StaticResource SecondaryButton}"
                                    FontSize="12" Padding="12,6"
                                    Click="EditEvent_Click"
                                    Tag="{Binding}"/>
                            <Button Content="Delete" Style="{StaticResource DangerButton}"
                                    FontSize="12" Padding="12,6"
                                    Click="DeleteEvent_Click"
                                    Tag="{Binding}"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Border>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header with gradient background -->
        <Border Grid.Row="0" Background="{StaticResource HeaderGradient}" 
                Height="100">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Back button -->
                <Button Grid.Column="0" Style="{StaticResource TouchButtonStyle}"
                        Click="BackButton_Click"
                        Margin="20,0,0,0"
                        Background="Transparent">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="⬅" FontSize="24" Margin="0,0,10,0"/>
                        <TextBlock Text="Back" FontSize="18" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                
                <!-- Title -->
                <StackPanel Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="Event Manager" 
                             FontSize="36" FontWeight="Light"
                             Foreground="White"
                             HorizontalAlignment="Center"/>
                    <TextBlock Text="Manage your events and galleries" 
                             FontSize="14"
                             Foreground="{StaticResource TextSecondaryBrush}"
                             HorizontalAlignment="Center"/>
                </StackPanel>
                
                <!-- Action buttons -->
                <StackPanel Grid.Column="2" Orientation="Horizontal" 
                           VerticalAlignment="Center"
                           Margin="0,0,20,0">
                    <Button Style="{StaticResource TouchButtonStyle}"
                            Click="CreateEvent_Click"
                            Margin="5">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="➕" FontSize="20" Margin="0,0,8,0"/>
                            <TextBlock Text="New Event" FontSize="16"/>
                        </StackPanel>
                    </Button>
                    
                    <Button Style="{StaticResource TouchButtonStyle}"
                            Click="HostGallery_Click"
                            Margin="5">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="🌐" FontSize="20" Margin="0,0,8,0"/>
                            <TextBlock Text="Host Gallery" FontSize="16"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Filter and Search Bar -->
        <Border Grid.Row="0" VerticalAlignment="Bottom" 
                Background="#1A1E37" Height="60"
                Margin="0,100,0,0">
            <Grid Margin="20,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                
                <!-- Filter buttons -->
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <RadioButton x:Name="AllEventsFilter" Content="All Events" 
                               IsChecked="True"
                               Checked="FilterChanged"
                               Style="{StaticResource {x:Type ToggleButton}}"
                               Foreground="White"
                               FontSize="14"
                               Padding="15,8"
                               Margin="5,0"/>
                    <RadioButton x:Name="UpcomingFilter" Content="Upcoming"
                               Checked="FilterChanged"
                               Style="{StaticResource {x:Type ToggleButton}}"
                               Foreground="White"
                               FontSize="14"
                               Padding="15,8"
                               Margin="5,0"/>
                    <RadioButton x:Name="PastFilter" Content="Past"
                               Checked="FilterChanged"
                               Style="{StaticResource {x:Type ToggleButton}}"
                               Foreground="White"
                               FontSize="14"
                               Padding="15,8"
                               Margin="5,0"/>
                </StackPanel>
                
                <!-- Search box -->
                <Border Grid.Column="2" Background="#2A2E47" 
                        CornerRadius="20" Width="300">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="🔍" 
                                 FontSize="16" 
                                 Margin="15,0,5,0"
                                 VerticalAlignment="Center"/>
                        <TextBox Grid.Column="1" x:Name="SearchBox"
                               Background="Transparent"
                               BorderThickness="0"
                               Foreground="White"
                               FontSize="14"
                               VerticalAlignment="Center"
                               Margin="0,0,15,0"
                               TextChanged="SearchBox_TextChanged"/>
                    </Grid>
                </Border>
            </Grid>
        </Border>

        <!-- Events Grid -->
        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto"
                     Margin="0,10,0,0">
            <ItemsControl x:Name="EventsItemsControl"
                         ItemTemplate="{StaticResource EventItemTemplate}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" 
                                 HorizontalAlignment="Center"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>

        <!-- Status Bar -->
        <Border Grid.Row="2" Background="#1A1E37" Height="40">
            <Grid Margin="20,0">
                <TextBlock x:Name="StatusText" 
                         Text="Ready"
                         Foreground="{StaticResource TextSecondaryBrush}"
                         VerticalAlignment="Center"
                         FontSize="13"/>
                <TextBlock x:Name="EventCountText"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Center"
                         Foreground="{StaticResource TextSecondaryBrush}"
                         FontSize="13"/>
            </Grid>
        </Border>
    </Grid>
</Window>