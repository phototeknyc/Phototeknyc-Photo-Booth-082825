<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Touch-Friendly Button Style -->
    <Style x:Key="TouchButtonStyle" TargetType="Button">
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="MinHeight" Value="44"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="#FF444444"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF666666"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF222222"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF888888"/>
                            <Setter TargetName="Border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF555555"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF777777"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#FF333333"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF555555"/>
                            <Setter Property="Foreground" Value="#FF999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Touch-Friendly Toggle Button -->
    <Style x:Key="TouchToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="MinHeight" Value="44"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="#FF444444"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF666666"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF4A90E2"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF6AA6F2"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF555555"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Touch-Friendly Slider -->
    <Style x:Key="TouchSliderStyle" TargetType="Slider">
        <Setter Property="Height" Value="44"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Foreground" Value="#FF4A90E2"/>
        <Setter Property="Background" Value="#FF666666"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <!-- Track -->
                        <Border x:Name="TrackBackground" 
                                Height="8" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="#FF888888" 
                                BorderThickness="1" 
                                CornerRadius="4" 
                                Margin="10,0"/>
                        
                        <Track x:Name="PART_Track" Margin="10,0">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{x:Null}" Command="{x:Static Slider.DecreaseLarge}">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Rectangle Fill="{TemplateBinding Foreground}" Height="8" RadiusX="4" RadiusY="4"/>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{x:Null}" Command="{x:Static Slider.IncreaseLarge}">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Rectangle Fill="Transparent" Height="8"/>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                            
                            <!-- Touch-friendly thumb -->
                            <Track.Thumb>
                                <Thumb x:Name="Thumb">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border Background="White" 
                                                    BorderBrush="{TemplateBinding Foreground}" 
                                                    BorderThickness="3" 
                                                    CornerRadius="16" 
                                                    Height="32" 
                                                    Width="32">
                                                <Border.Effect>
                                                    <DropShadowEffect Color="Black" ShadowDepth="2" BlurRadius="4" Opacity="0.3"/>
                                                </Border.Effect>
                                            </Border>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FF999999"/>
                            <Setter TargetName="TrackBackground" Property="Background" Value="#FF444444"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Touch-Friendly ComboBox -->
    <Style x:Key="TouchComboBoxStyle" TargetType="ComboBox">
        <Setter Property="MinHeight" Value="44"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="#FF555555"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF777777"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <!-- Touch-Friendly TextBox -->
    <Style x:Key="TouchTextBoxStyle" TargetType="TextBox">
        <Setter Property="MinHeight" Value="44"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="#FF555555"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF777777"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF4A90E2"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#FF333333"/>
                            <Setter Property="Foreground" Value="#FF999999"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Touch-Friendly CheckBox -->
    <Style x:Key="TouchCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="MinHeight" Value="44"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- Larger touch-friendly checkbox -->
                        <Border x:Name="CheckBorder" Grid.Column="0"
                                Width="32" Height="32"
                                Background="#FF555555"
                                BorderBrush="#FF777777"
                                BorderThickness="2"
                                CornerRadius="4"
                                Margin="0,0,8,0">
                            <Path x:Name="CheckMark" 
                                  Data="M 0 6 L 6 12 L 16 0" 
                                  Stroke="White" 
                                  StrokeThickness="3"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"
                                  StrokeLineJoin="Round"
                                  Visibility="Collapsed"/>
                        </Border>
                        
                        <ContentPresenter Grid.Column="1" 
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"/>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBorder" Property="Background" Value="#FF4A90E2"/>
                            <Setter TargetName="CheckBorder" Property="BorderBrush" Value="#FF6AA6F2"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="CheckBorder" Property="Background" Value="#FF333333"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBorder" Property="Background" Value="#FF666666"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Touch-Friendly ScrollBar -->
    <Style x:Key="TouchScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Background" Value="#FF444444"/>
        <Setter Property="Foreground" Value="#FF777777"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Height" Value="20"/>
                <Setter Property="Width" Value="Auto"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Touch-Friendly Expander -->
    <Style x:Key="TouchExpanderStyle" TargetType="Expander">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <ToggleButton x:Name="HeaderToggle" Grid.Row="0"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource TouchToggleButtonStyle}"
                                      MinHeight="50"
                                      HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="Left">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <Path x:Name="Arrow" Grid.Column="0"
                                      Data="M 0 0 L 0 8 L 6 4 Z"
                                      Fill="White"
                                      Margin="8"
                                      RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform x:Name="ArrowRotation" Angle="0"/>
                                    </Path.RenderTransform>
                                </Path>
                                
                                <ContentPresenter Grid.Column="1" 
                                                  Content="{TemplateBinding Header}"
                                                  VerticalAlignment="Center"
                                                  Margin="8,0"/>
                            </Grid>
                        </ToggleButton>
                        
                        <ContentPresenter x:Name="ContentPanel" Grid.Row="1"
                                          Content="{TemplateBinding Content}"
                                          Visibility="Collapsed"/>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentPanel" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Touch-Friendly ListBox -->
    <Style x:Key="TouchListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="#FF333333"/>
        <Setter Property="BorderBrush" Value="#FF555555"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <Style x:Key="TouchListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            Margin="2">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF4A90E2"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF555555"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>